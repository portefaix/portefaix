---
# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

ingress-nginx:
  controller:
    resources:
      limits:
        # cpu: 200m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 250Mi
    config:
      enable-opentelemetry: "true"
      opentelemetry-config: "/etc/nginx/opentelemetry.toml"
      opentelemetry-operation-name: "HTTP $request_method $service_name $uri"
      opentelemetry-trust-incoming-span: "true"
      otlp-collector-host: "grafana-agent-grafana-agent-traces.opentelemetry.svc.cluster.local"
      otlp-collector-port: "4317"
      otel-max-queuesize: "2048"
      otel-schedule-delay-millis: "5000"
      otel-max-export-batch-size: "512"
      otel-service-name: "nginx-ingress" # Opentelemetry resource name
      otel-sampler: "AlwaysOn" # Also: AlwaysOff, TraceIdRatioBased
      otel-sampler-ratio: "1.0"
      otel-sampler-parent-based: "true"
      server-snippet: |
        opentelemetry_attribute "ingress.namespace" "$namespace";
        opentelemetry_attribute "ingress.service_name" "$service_name";
        opentelemetry_attribute "ingress.name" "$ingress_name";
        opentelemetry_attribute "ingress.upstream" "$proxy_upstream_name";

    opentelemetry:
      enabled: true

  defaultBackend:
    # TODO: https://github.com/kubernetes/ingress-nginx/issues/10245
    image:
      registry: registry.k8s.io
      image: defaultbackend-amd64
    nodeSelector:
      node-role.kubernetes.io/master: "true" # Master is AMD64
    resources:
      limits:
        # cpu: 10m
        memory: 20Mi
      requests:
        cpu: 10m
        memory: 20Mi
