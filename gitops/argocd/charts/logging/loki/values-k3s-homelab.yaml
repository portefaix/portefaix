---
# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

ingress:
  enabled: true
  entries:
  - name: loki-gateway-external
    host: loki-gateway.home.portefaix.xyz
    # className: nginx
    className: traefik
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      # traefik.ingress.kubernetes.io/router.tls: "true"
    labels: {}
  - name: loki-gateway-cloudflare
    host: loki-gateway.homelab.k3s.portefaix.xyz
    # className: nginx
    className: traefik
    annotations:
      external-dns.alpha.kubernetes.io/hostname: loki-gateway.homelab.k3s.portefaix.xyz
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      # traefik.ingress.kubernetes.io/router.tls: "true"
      # nginx.ingress.kubernetes.io/auth-url: |-
      #   http://authentik.identity.svc.cluster.local/outpost.goauthentik.io/auth/nginx
      # nginx.ingress.kubernetes.io/auth-signin: |-
      #   http://authentik.homelab.k3s.portefaix.xyz/outpost.goauthentik.io/start?rd=$escaped_request_uri
      # nginx.ingress.kubernetes.io/auth-response-headers: |-
      #   Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
      # nginx.ingress.kubernetes.io/auth-snippet: |
      #   proxy_set_header X-Forwarded-Host $http_host;
    labels:
      external-dns.io/provider: cloudflare

observability:
  cluster_name: "portefaix-k3s-homelab"

alerting:
  dashboard_url: "http://grafana.home.portefaix.xyz/d/L_arsiBVk/logging-applications-overview?orgId=1"
  runbook_url: "http://grafana.home.portefaix.xyz"

loki:
  clusterLabelOverride: portefaix-k3s-homelab
  deploymentMode: SimpleScalable
  loki:
    memberlistConfig:
      cluster_label: loki
      cluster_label_verification_disabled: true
      abort_if_cluster_join_fails: true
      join_members:
      - loki-memberlist

    limits_config:
      ingestion_burst_size_mb: 10000
      ingestion_rate_mb: 1000
      max_cache_freshness_per_query: 10m
      max_global_streams_per_user: 100000
      max_line_size: 2MB
      max_line_size_truncate: true
      max_query_parallelism: 2048
      max_streams_per_user: 100000
      per_stream_rate_limit: 512M
      per_stream_rate_limit_burst: 1024M
      query_timeout: 5m
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      retention_period: 720h
      shard_streams:
        enabled: true
      split_queries_by_interval: 15m
      tsdb_max_query_parallelism: 2048
      volume_enabled: true

    commonConfig:
      path_prefix: /var/loki

    storage:
      bucketNames:
        chunks: portefaix-homelab-logs-chunks
        ruler: portefaix-homelab-logs-ruler
        admin: portefaix-homelab-logs-admin
      type: s3
      s3:
        s3: null
        endpoint: ${AWS_S3_ENDPOINT}
        region: auto
        access_key_id: ${AWS_ACCESS_KEY_ID}
        secret_access_key: ${AWS_SECRET_ACCESS_KEY}
        s3ForcePathStyle: true
        insecure: false
        http_config: {}

    schemaConfig:
      configs:
      - from: "2023-06-01"
        index:
          period: 24h
          prefix: tsdb_index_
        object_store: s3
        schema: v12
        store: tsdb
      - from: "2024-05-27"
        index:
          period: 24h
          prefix: tsdb_index_
        object_store: s3
        schema: v13
        store: tsdb

    rulerConfig:
      enable_alertmanager_v2: true
      alertmanager_url: http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
      external_url: "http://grafana.observability.svc.cluster.local:80"
      datasource_uid: "loki"
      storage:
        # type: s3
        # s3:
        #   s3: null
        #   endpoint: ${AWS_S3_ENDPOINT}
        #   region: auto
        #   access_key_id: ${AWS_ACCESS_KEY_ID}
        #   secret_access_key: ${AWS_SECRET_ACCESS_KEY}
        #   insecure: false
        #   http_config: {}
        type: local
        local:
          directory: "/var/loki/rules"
      rule_path: "/var/loki/rules"
      ring:
        kvstore:
          store: inmemory
      enable_api: true

      remote_write:
        enabled: false
        clients:
          # prometheus:
          #   url: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090/api/v1/write
          #   send_exemplars: true
          #   queue_config:
          #     min_backoff: 1m
          #     max_backoff: 5m
          #     batch_send_deadline: 5m
          # mimir:
          #   url: http://mimir-gateway.monitoring.svc.cluster.local:9090/prometheus
          agent:
            url: http://alloy-alloy-metrics.opentelemetry.svc.cluster.local:9090/api/v1/write
            queue_config:
              # capacity: 1
              min_backoff: 1m
              max_backoff: 5m
              batch_send_deadline: 5m

    storage_config:
      tsdb_shipper:
        active_index_directory: /var/loki/tsdb-index
        cache_location: /var/loki/tsdb-cache

    compactor:
      working_directory: /var/loki/retention
      compaction_interval: 30m
      retention_enabled: true
      retention_delete_delay: 720h
      retention_delete_worker_count: 150
      delete_request_cancel_period: "10m" # don't wait 24h before processing the delete_request
      deletion_mode: filter-and-delete
      delete_request_store: s3

    ingester:
      autoforget_unhealthy: true

    querier:
      max_concurrent: 4

  write:
    replicas: 2
    extraEnvFrom:
    - secretRef:
        name: loki-cloudflare-credentials
    resources:
      limits:
        memory: 600Mi
      requests:
        cpu: 200m
        memory: 200Mi
    persistence:
      size: 1Gi
      # https://grafana.com/docs/loki/latest/operations/storage/filesystem/#high-availability
      storageClass: local-path
    nodeSelector:
      node-role.kubernetes.io/infra: "true"
      # kubernetes.io/arch: amd64

  read:
    replicas: 2
    extraEnvFrom:
    - secretRef:
        name: loki-cloudflare-credentials
    resources:
      limits:
        # cpu: 300m
        memory: 600Mi
      requests:
        cpu: 60m
        memory: 200Mi
    persistence:
      size: 300Mi
      storageClass: nfs-client
    nodeSelector:
      node-role.kubernetes.io/infra: "true"

  backend:
    replicas: 2
    extraEnvFrom:
    - secretRef:
        name: loki-cloudflare-credentials
    resources:
      limits:
        memory: 600Mi
      requests:
        cpu: 60m
        memory: 200Mi
    persistence:
      size: 300Mi
      storageClass: nfs-client
    nodeSelector:
      node-role.kubernetes.io/infra: "true"

  singleBinary:
    replicas: 0
    resources:
      limits:
        memory: 600Mi
      requests:
        cpu: 60m
        memory: 200Mi
    persistence:
      size: 100Mi
      storageClass: nfs-client

  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
    - loki.192.168.0.62.nip.io

  gateway:
    enabled: true
    replicas: 1
    verboseLogging: true
    resources:
      limits:
        memory: 600Mi
      requests:
        cpu: 60m
        memory: 200Mi
    ingress:
      enabled: true
      # ingressClassName: nginx
      ingressClassName: traefik
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
        # traefik.ingress.kubernetes.io/router.tls: "true"
      hosts:
      - host: loki-gateway.192.168.0.62.nip.io
        paths:
        - path: /
          pathType: Prefix
      tls: []

  query_range:
    align_queries_with_step: true
    parallelise_shardable_queries: false
    max_retries: 3
    cache_results: true
    results_cache:
      cache:
        embedded_cache:
          enabled: true
          max_size_mb: 100

  sidecar:
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 20Mi
