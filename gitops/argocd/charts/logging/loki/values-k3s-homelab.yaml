# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
loki:
  loki:
    # -- Limits config
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      max_cache_freshness_per_query: 10m
      split_queries_by_interval: 15m

    storage:
      bucketNames:
        chunks: portefaix-homelab-logs-chunks
        ruler: portefaix-homelab-logs-ruler
        admin: portefaix-homelab-logs-admin
      type: s3
      s3:
        s3: null
        endpoint: ${AWS_S3_ENDPOINT}
        region: auto
        access_key_id: ${AWS_ACCESS_KEY_ID}
        secret_access_key: ${AWS_SECRET_ACCESS_KEY}
        s3ForcePathStyle: true
        insecure: false
        http_config: {}

    schemaConfig:
      configs:
      - from: "2022-01-11"
        store: boltdb-shipper
        schema: v12
        object_store: s3
        index:
          period: 24h
          prefix: loki_index_
      # Prepare TSDB migration
      # - from: "2023-01-01"
      #   store: tsdb
      #   schema: v12
      #   object_store: s3
      #   index:
      #     period: 24h
      #     prefix: loki_index_

  write:
    replicas: 2
    extraEnvFrom:
    - secretRef:
        name: loki-cloudflare-credentials
    resources:
      limits:
        # cpu: 300m
        memory: 600Mi
      requests:
        cpu: 60m
        memory: 200Mi
    persistence:
      size: 1Gi
      storageClassName: nfs-client

  read:
    replicas: 2
    extraEnvFrom:
    - secretRef:
        name: loki-cloudflare-credentials
    resources:
      limits:
        # cpu: 300m
        memory: 600Mi
      requests:
        cpu: 60m
        memory: 200Mi
    persistence:
      size: 300Mi
      storageClassName: nfs-client

  singleBinary:
    replicas: 0
    resources:
      limits:
        # cpu: 300m
        memory: 600Mi
      requests:
        cpu: 60m
        memory: 200Mi
    persistence:
      size: 100Mi
      storageClassName: nfs-client

  ingress:
    enabled: false
    # ingressClassName: nginx
    # annotations:
    #   nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.identity.svc.cluster.local/oauth2/auth"
    #   nginx.ingress.kubernetes.io/auth-signin: "http://auth.192.168.0.208.nip.io/oauth2/sign_in?rd=http://$host$request_uri"
    # paths:
    #   write:
    #     - /api/prom/push
    #     - /loki/api/v1/push
    #   read:
    #     - /api/prom/tail
    #     - /loki/api/v1/tail
    #     - /loki/api
    #     - /api/prom/rules
    #     - /loki/api/v1/rules
    #     - /prometheus/api/v1/rules
    #     - /prometheus/api/v1/alerts
    # hosts:
    # - loki.192.168.0.208.nip.io

  gateway:
    replicas: 1
    verboseLogging: true
    resources:
      limits:
        # cpu: 300m
        memory: 600Mi
      requests:
        cpu: 60m
        memory: 200Mi
    ingress:
      enabled: false
      # ingressClassName: nginx
      # annotations:
      #   nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.identity.svc.cluster.local/oauth2/auth"
      #   nginx.ingress.kubernetes.io/auth-signin: "http://auth.192.168.0.208.nip.io/oauth2/sign_in?rd=http://$host$request_uri"
      # hosts:
      # - host: gateway.loki.192.168.0.208.nip.io
      #   paths:
      #     - path: /
      #       pathType: Prefix
      # tls: []
