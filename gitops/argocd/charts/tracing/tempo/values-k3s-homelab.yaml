---
# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

ingress:
  enabled: true
  entries:
  - name: tempo-external
    host: tempo.home.portefaix.xyz
    className: nginx
    annotations:
      hajimari.io/enable: "true"
      hajimari.io/icon: "logos:tempo"
      hajimari.io/appName: "Tempo"
      hajimari.io/group: "Observability"
    labels: {}
  - name: tempo-cloudflare
    host: tempo.homelab.k3s.portefaix.xyz
    className: nginx
    annotations:
      external-dns.alpha.kubernetes.io/hostname: tempo.homelab.k3s.portefaix.xyz
      nginx.ingress.kubernetes.io/auth-url: |-
        http://authentik.identity.svc.cluster.local/outpost.goauthentik.io/auth/nginx
      nginx.ingress.kubernetes.io/auth-signin: |-
        http://authentik.homelab.k3s.portefaix.xyz/outpost.goauthentik.io/start?rd=$escaped_request_uri
      nginx.ingress.kubernetes.io/auth-response-headers: |-
        Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;
    labels:
      external-dns.io/provider: cloudflare

tempo-distributed:

  ingester:
    replicas: 3
    resources:
      requests:
        cpu: 50m
        memory: 100Mi
      limits:
        memory: 500Mi
    persistence:
      enabled: true
      storageClassName: nfs-client
      accessModes:
      - ReadWriteOnce
      size: 1Gi
    extraEnvFrom:
    - secretRef:
        name: tempo-cloudflare-credentials

  metricsGenerator:
    replicas: 1
    resources:
      requests:
        cpu: 50m
        memory: 150Mi
      limits:
        memory: 800Mi
    extraEnvFrom:
    - secretRef:
        name: tempo-cloudflare-credentials

  distributor:
    replicas: 1
    resources:
      requests:
        cpu: 50m
        memory: 150Mi
      limits:
        memory: 900Mi
    extraEnvFrom:
    - secretRef:
        name: tempo-cloudflare-credentials

  compactor:
    replicas: 1
    resources:
      requests:
        cpu: 50m
        memory: 1Gi
      limits:
        memory: 2Gi
    extraEnvFrom:
    - secretRef:
        name: tempo-cloudflare-credentials
    config:
      compaction:
        # -- Duration to keep blocks
        block_retention: 24h
        # Duration to keep blocks that have been compacted elsewhere
        compacted_block_retention: 1h
        # -- Blocks in this time window will be compacted together
        compaction_window: 1h
        # -- Amount of data to buffer from input blocks
        v2_in_buffer_bytes: 5242880
        # -- Flush data to backend when buffer is this large
        v2_out_buffer_bytes: 20971520
        # -- Maximum number of traces in a compacted block. WARNING: Deprecated. Use max_block_bytes instead.
        max_compaction_objects: 6000000
        # -- Maximum size of a compacted block in bytes
        max_block_bytes: 107374182400
        # -- Number of tenants to process in parallel during retention
        retention_concurrency: 10
        # -- Number of traces to buffer in memory during compaction
        v2_prefetch_traces_count: 1000
        # -- The maximum amount of time to spend compacting a single tenant before moving to the next
        max_time_per_tenant: 5m
        # -- The time between compaction cycles
        compaction_cycle: 30s

  querier:
    replicas: 1
    resources:
      requests:
        cpu: 50m
        memory: 150Mi
      limits:
        memory: 900Mi
    extraEnvFrom:
    - secretRef:
        name: tempo-cloudflare-credentials

  queryFrontend:
    replicas: 1
    resources:
      requests:
        cpu: 50m
        memory: 150Mi
      limits:
        memory: 900Mi
    extraEnvFrom:
    - secretRef:
        name: tempo-cloudflare-credentials

  storage:
    trace:
      block:
      # -- The supported block versions are specified here https://grafana.com/docs/tempo/latest/configuration/parquet/
      version: vParquet3
      backend: s3
      s3:
        bucket: portefaix-homelab-traces-chunks
        endpoint: ${AWS_S3_ENDPOINT_NO_HTTPS}
        access_key: ${AWS_ACCESS_KEY_ID}
        secret_key: ${AWS_SECRET_ACCESS_KEY}
        insecure: false

  memcached:
    enabled: true
    replicas: 1
    resources:
      requests:
        cpu: 50m
        memory: 100Mi
      limits:
        memory: 300Mi

  memcachedExporter:
    enabled: true
    resources:
      requests:
        cpu: 50m
        memory: 100Mi
      limits:
        memory: 300Mi

  gateway:
    enabled: true
    replicas: 1
    resources:
      requests:
        cpu: 200m
        memory: 200Mi
      limits:
        memory: 600Mi
    extraEnvFrom:
    - secretRef:
        name: tempo-cloudflare-credentials

  adminApi:
    replicas: 1
    resources:
      requests:
        cpu: 50m
        memory: 50Mi
      limits:
        memory: 300Mi

  metaMonitoring:
    serviceMonitor:
      clusterLabel: portefaix-k3s-homelab
