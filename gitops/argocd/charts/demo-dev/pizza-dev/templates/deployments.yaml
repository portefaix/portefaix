# SPDX-FileCopyrightText: Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quickpizza-frontend
  labels:
    app.kubernetes.io/name: quickpizza
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: frontend-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: quickpizza
      app.kubernetes.io/instance: frontend-gateway
  template:
    metadata:
      name: quickpizza-frontend
      labels:
        app.kubernetes.io/name: quickpizza
        app.kubernetes.io/instance: frontend-gateway
    spec:
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
        - name: quickpizza
          image: ghcr.io/grafana/quickpizza-local:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3333
          envFrom:
            - configMapRef:
                name: tracing-env
                optional: true
            - configMapRef:
                name: quickpizza-env
          env:
            - name: QUICKPIZZA_ALL_SERVICES
              value: "0"
            - name: QUICKPIZZA_FRONTEND
              value: "1"
            - name: QUICKPIZZA_CATALOG_ENDPOINT
              value: http://quickpizza-catalog:3333
            - name: QUICKPIZZA_COPY_ENDPOINT
              value: http://quickpizza-copy:3333
            - name: QUICKPIZZA_WS_ENDPOINT
              value: http://quickpizza-ws:3333
            - name: QUICKPIZZA_RECOMMENDATIONS_ENDPOINT
              value: http://quickpizza-recs:3333
            - name: QUICKPIZZA_CONFIG_ENDPOINT
              value: http://quickpizza-config:3333
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quickpizza-config
  labels:
    app.kubernetes.io/name: quickpizza
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: config
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: quickpizza
      app.kubernetes.io/instance: config
  template:
    metadata:
      name: quickpizza-config
      labels:
        app.kubernetes.io/name: quickpizza
        app.kubernetes.io/instance: config
    spec:
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
        - name: quickpizza
          image: ghcr.io/grafana/quickpizza-local:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3333
          envFrom:
            - configMapRef:
                name: tracing-env
                optional: true
            - configMapRef:
                name: quickpizza-env
          env:
            - name: QUICKPIZZA_ALL_SERVICES
              value: "0"
            - name: QUICKPIZZA_CONFIG
              value: "1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quickpizza-ws
  labels:
    app.kubernetes.io/name: quickpizza
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: ws
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: quickpizza
      app.kubernetes.io/instance: ws
  template:
    metadata:
      name: quickpizza-ws
      labels:
        app.kubernetes.io/name: quickpizza
        app.kubernetes.io/instance: ws
    spec:
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
        - name: quickpizza
          image: ghcr.io/grafana/quickpizza-local:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3333
          envFrom:
            - configMapRef:
                name: tracing-env
                optional: true
            - configMapRef:
                name: quickpizza-env
          env:
            - name: QUICKPIZZA_ALL_SERVICES
              value: "0"
            - name: QUICKPIZZA_WS
              value: "1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quickpizza-catalog
  labels:
    app.kubernetes.io/name: quickpizza
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: catalog
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: quickpizza
      app.kubernetes.io/instance: catalog
  template:
    metadata:
      name: quickpizza-catalog
      labels:
        app.kubernetes.io/name: quickpizza
        app.kubernetes.io/instance: catalog
    spec:
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
        - name: quickpizza
          image: ghcr.io/grafana/quickpizza-local:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3333
          envFrom:
            - configMapRef:
                name: tracing-env
                optional: true
            - configMapRef:
                name: quickpizza-env
          env:
            - name: QUICKPIZZA_ALL_SERVICES
              value: "0"
            - name: QUICKPIZZA_CATALOG
              value: "1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quickpizza-copy
  labels:
    app.kubernetes.io/name: quickpizza
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: copy
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: quickpizza
      app.kubernetes.io/instance: copy
  template:
    metadata:
      name: quickpizza-copy
      labels:
        app.kubernetes.io/name: quickpizza
        app.kubernetes.io/instance: copy
    spec:
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
        - name: quickpizza
          image: ghcr.io/grafana/quickpizza-local:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3333
          envFrom:
            - configMapRef:
                name: tracing-env
                optional: true
            - configMapRef:
                name: quickpizza-env
          env:
            - name: QUICKPIZZA_ALL_SERVICES
              value: "0"
            - name: QUICKPIZZA_COPY
              value: "1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quickpizza-recs
  labels:
    app.kubernetes.io/name: quickpizza
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: recs
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: quickpizza
      app.kubernetes.io/instance: recs
  template:
    metadata:
      name: quickpizza-recs
      labels:
        app.kubernetes.io/name: quickpizza
        app.kubernetes.io/instance: recs
    spec:
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
        - name: quickpizza
          image: ghcr.io/grafana/quickpizza-local:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3333
          envFrom:
            - configMapRef:
                name: tracing-env
                optional: true
            - configMapRef:
                name: quickpizza-env
          env:
            - name: QUICKPIZZA_ALL_SERVICES
              value: "0"
            - name: QUICKPIZZA_RECOMMENDATIONS
              value: "1"
            - name: QUICKPIZZA_CATALOG_ENDPOINT
              value: http://quickpizza-catalog:3333
            - name: QUICKPIZZA_COPY_ENDPOINT
              value: http://quickpizza-copy:3333
