# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  {{- if .Values.additionalAnnotations }}
  annotations:
  {{ toYaml .Values.additionalAnnotations | indent 4 }}
  {{- end }}
  labels:
    {{- include "chart.labels" (index .Subcharts "k8sgpt-operator") | nindent 4 }}
    app: k8sgpt
  name: k8sgpt-ai-credentials
  namespace: {{ .Release.Namespace }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: akeyless
  target:
    name: k8sgpt-ai-credentials
    creationPolicy: Owner
  data:
    # OpenAI
    {{- if .Values.ai.providers.openai.enabled }}
    - secretKey: openai-api-key
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: K8SGPT_OPENAI
    {{- end }}
    # Azure OpenAI
    {{- if .Values.ai.providers.azure_openai.enabled }}
    - secretKey: azure-api-key
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: K8SGPT_AZURE_OPENAI_APIKEY
    - secretKey: AZURE_OPENAI_ENDPOINT
      remoteRef:
        key: K8SGPT_AZURE_OPENAI_ENDPOINT
    {{- end }}
    # AWS Bedrock
    {{- if .Values.ai.providers.aws_bedrock.enabled }}
    - secretKey: AWS_ACCESS_KEY
      remoteRef:
        key: K8SGPT_AWS_ACCESS_KEY
    - secretKey: AWS_SECRET_ACCESS_KEY
      remoteRef:
        key: K8SGPT_AWS_SECRET_ACCESS_KEY
    - secretKey: AWS_DEFAULT_REGION
      remoteRef:
        key: K8SGPT_AWS_DEFAULT_REGION
    {{- end }}
    # Google Gemini
    {{- if .Values.ai.providers.google_gemini.enabled }}
    - secretKey: GEMINI_API_KEY
      remoteRef:
        key: K8SGPT_GEMINI_API_KEY
    {{- end }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  {{- if .Values.additionalAnnotations }}
  annotations:
  {{ toYaml .Values.additionalAnnotations | indent 4 }}
  {{- end }}
  labels:
    {{- include "chart.labels" (index .Subcharts "k8sgpt-operator") | nindent 4 }}
    app: k8sgpt
  name: k8sgpt-cloudflare-credentials
  namespace: {{ .Release.Namespace }}
spec:
  refreshInterval: "1h"
  secretStoreRef:
    kind: ClusterSecretStore
    name: akeyless
  target:
    name: k8sgpt-cloudflare-credentials
    creationPolicy: Owner
  data:
  - secretKey: AWS_ACCESS_KEY_ID
    remoteRef:
      key: AWS_ACCESS_KEY_ID
  - secretKey: AWS_SECRET_ACCESS_KEY
    remoteRef:
      key: AWS_SECRET_ACCESS_KEY
  - secretKey: AWS_S3_ENDPOINT
    remoteRef:
      key: AWS_S3_ENDPOINT
