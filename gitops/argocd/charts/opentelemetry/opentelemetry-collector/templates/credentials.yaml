# SPDX-FileCopyrightText: Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  {{- if .Values.additionalAnnotations }}
  annotations:
  {{ toYaml .Values.additionalAnnotations | indent 4 }}
  {{- end }}
  labels:
    {{- include "opentelemetry-collector.labels" (index $.Subcharts "opentelemetry-gateway") | nindent 4 }}
  name: opentelemetry-datadog-credentials
  namespace: {{ .Release.Namespace }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: akeyless
  target:
    name: opentelemetry-datadog-credentials
    creationPolicy: Owner
  data:
    - secretKey: DD_API_KEY
      remoteRef:
        key: DATADOG_API_KEY
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  {{- if .Values.additionalAnnotations }}
  annotations:
  {{ toYaml .Values.additionalAnnotations | indent 4 }}
  {{- end }}
  labels:
    {{- include "opentelemetry-collector.labels" (index $.Subcharts "opentelemetry-gateway") | nindent 4 }}
  name: opentelemetry-lightstep-credentials
  namespace: {{ .Release.Namespace }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: akeyless
  target:
    name: opentelemetry-lightstep-credentials
    creationPolicy: Owner
  data:
    - secretKey: LS_TOKEN
      remoteRef:
        key: LIGHTSTEP_TOKEN
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  {{- if .Values.additionalAnnotations }}
  annotations:
  {{ toYaml .Values.additionalAnnotations | indent 4 }}
  {{- end }}
  labels:
    {{- include "opentelemetry-collector.labels" (index $.Subcharts "opentelemetry-gateway") | nindent 4 }}
  name: opentelemetry-grafanacloud-credentials
  namespace: {{ .Release.Namespace }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: akeyless
  target:
    name: opentelemetry-grafanacloud-credentials
    creationPolicy: Owner
  data:
    # - secretKey: GRAFANA_CLOUD_METRICS_ID
    #   remoteRef:
    #     key: GRAFANA_CLOUD_METRICS_ID
    # - secretKey: GRAFANA_CLOUD_METRICS_APIKEY
    #   remoteRef:
    #     key: GRAFANA_CLOUD_METRICS_APIKEY
    # - secretKey: GRAFANA_CLOUD_LOGS_ID
    #   remoteRef:
    #     key: GRAFANA_CLOUD_LOGS_ID
    # - secretKey: GRAFANA_CLOUD_LOGS_APIKEY
    #   remoteRef:
    #     key: GRAFANA_CLOUD_LOGS_APIKEY
    # - secretKey: GRAFANA_CLOUD_TRACES_ID
    #   remoteRef:
    #     key: GRAFANA_CLOUD_TRACES_ID
    # - secretKey: GRAFANA_CLOUD_TRACES_APIKEY
    #   remoteRef:
    #     key: GRAFANA_CLOUD_TRACES_APIKEY
    - secretKey: GRAFANA_CLOUD_OTEL_COLLECTOR_TOKEN
      remoteRef:
        key: GRAFANA_CLOUD_OTEL_COLLECTOR_TOKEN
    - secretKey: GRAFANA_CLOUD_OTEL_COLLECTOR_ID
      remoteRef:
        key: GRAFANA_CLOUD_OTEL_COLLECTOR_ID
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  {{- if .Values.additionalAnnotations }}
  annotations:
  {{ toYaml .Values.additionalAnnotations | indent 4 }}
  {{- end }}
  labels:
    {{- include "opentelemetry-collector.labels" (index $.Subcharts "opentelemetry-gateway") | nindent 4 }}
  name: opentelemetry-kloudmate-credentials
  namespace: {{ .Release.Namespace }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: akeyless
  target:
    name: opentelemetry-kloudmate-credentials
    creationPolicy: Owner
  data:
    - secretKey: KLOUDMATE_API_KEY
      remoteRef:
        key: KLOUDMATE_API_KEY
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  {{- if .Values.additionalAnnotations }}
  annotations:
  {{ toYaml .Values.additionalAnnotations | indent 4 }}
  {{- end }}
  labels:
    {{- include "opentelemetry-collector.labels" (index $.Subcharts "opentelemetry-gateway") | nindent 4 }}
  name: opentelemetry-hyperdx-credentials
  namespace: {{ .Release.Namespace }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: akeyless
  target:
    name: opentelemetry-hyperdx-credentials
    creationPolicy: Owner
  data:
    - secretKey: HYPERDX_API_KEY
      remoteRef:
        key: HYPERDX_API_KEY
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  {{- if .Values.additionalAnnotations }}
  annotations:
  {{ toYaml .Values.additionalAnnotations | indent 4 }}
  {{- end }}
  labels:
    {{- include "opentelemetry-collector.labels" (index $.Subcharts "opentelemetry-gateway") | nindent 4 }}
  name: opentelemetry-oneuptime-credentials
  namespace: {{ .Release.Namespace }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: akeyless
  target:
    name: opentelemetry-oneuptime-credentials
    creationPolicy: Owner
  data:
    - secretKey: ONEUPTIME_TOKEN
      remoteRef:
        key: ONEUPTIME_TOKEN
