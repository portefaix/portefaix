# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
opentelemetry-collector:
  config:
    receivers:
      jaeger:
        protocols:
          grpc:
            endpoint: 0.0.0.0:14250
          thrift_http:
            endpoint: 0.0.0.0:14268
          thrift_compact:
            endpoint: 0.0.0.0:6831
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      prometheus:
        config:
          scrape_configs:
            - job_name: opentelemetry-collector
              scrape_interval: 10s
              static_configs:
                - targets:
                    - localhost:8888
      zipkin:
        endpoint: 0.0.0.0:9411

    exporters:
      logging:
        logLevel: debug

      # Data sources: metrics
      # prometheusremotewrite:
      #   endpoint: "http://mimir.monitoring.svc.cluster.local:9411/api/prom/push"

      # Data sources: logs
      # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/exporter/lokiexporter/README.md
      # loki:
      #   endpoint: "http://loki.logging.svc.cluster.local:3100/loki/api/v1/push"
      #   tenant_id: "homelab"
      #   labels:
      #     resource:
      #       # Allowing 'container.name' attribute and transform it to 'container_name', which is a valid Loki label name.
      #       container.name: "container_name"
      #       # Allowing 'k8s.cluster.name' attribute and transform it to 'k8s_cluster_name', which is a valid Loki label name.
      #       k8s.cluster.name: "k8s_cluster_name"
      #     attributes:
      #       # Allowing 'severity' attribute and not providing a mapping, since the attribute name is a valid Loki label name.
      #       severity: ""
      #       http.status_code: "http_status_code" 
      #     record:
      #       # Adds 'traceID' as a log label, seen as 'traceid' in Loki.
      #       traceID: "traceid"
      #   # headers:
      #   #   "X-Custom-Header": "portefaix_homelab"

      # Data sources: traces, metrics, logs
      otlp/tempo:
        endpoint: tempo.tracing.svc.cluster.local:4317
        tls:
          insecure_skip_verify: true
          insecure: true

      # Data sources: traces, metrics, logs
      # otlp/honeycomb:
      #   endpoint: "api.honeycomb.io:443"
      #   headers:
      #     "x-honeycomb-team": "${HONEYCOMB_API_KEY}"
      #     "x-honeycomb-dataset": "portefaix-homelab" # for Metrics

      # Data sources: traces, metrics, logs
      # otlp/aspecto:
      #   endpoint: otelcol.aspecto.io:4317
      #   headers:
      #     Authorization: ${ASPECTO_API_KEY}

      # datadog:
      #   env: prod
      #   service: opentelemetry
      #   tags:
      #     - cloud:homelab
      #   api:
      #     key: ${DATADOG_API_KEY}
      #     site: datadoghq.eu

      # mezmo:
      #   ingest_url: "https://logs.logdna.com/log/ingest"
      #   ingest_key: "${MEZMO_API_KEY}"

      
    extensions:
      health_check: {}
      memory_ballast: {}

    processors:
      # Data sources: traces
      attributes:
        actions:
          - key: environment
            value: homelab
            action: insert
          # - key: db.statement
          #   action: delete
          - key: email
            action: hash
      
      batch: {}

      # Data sources: traces, metrics, logs
      # If set to null, will be overridden with values based on k8s resource limits
      memory_limiter: null
      #   check_interval: 5s
      #   limit_mib: 4000
      #   spike_limit_mib: 500

      # Data sources: traces
      resource:
        attributes:
        - key: cloud.provider
          value: "k3s"
          action: insert
        - key: k8s.cluster.name
          from_attribute: k8s-cluster
          action: insert
        - key: redundant-attribute
          action: delete

    service:
      telemetry:
        metrics:
          address: 0.0.0.0:8888
      extensions:
        - health_check
        - memory_ballast
      pipelines:
        logs:
          exporters:
            - logging
            # - loki
            # - datadog
            # - mezmo
          processors:
            - memory_limiter
            - batch
          receivers:
            - otlp/tempo
        metrics:
          exporters:
            - logging
            # - datadog
          processors:
            - memory_limiter
            - batch
          receivers:
            - otlp/tempo
            - prometheus
            # - otlp/honeycomb
        traces:
          exporters:
            - logging
          processors:
            - memory_limiter
            - batch
          receivers:
            # - jaeger
            # - zipkin
            - otlp/tempo
            # - otlp/honeycomb
            # - otlp/aspecto

  resources:
    limits:
      # cpu: 300m
      memory: 1000Mi
    requests:
      cpu: 100m
      memory: 400Mi