# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
ingress:
  enabled: true
  entries:
    metrics:
    - name: agent-metrics-external
      host: agent-metrics.home.portefaix.xyz
      service: grafana-agent-metrics
      className: nginx
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/icon: "logos:opentelemetry-icon"
        hajimari.io/appName: "Grafana Agent Metrics"
        hajimari.io/group: "OpenTelemetry"
      labels: {}
    - name: agent-metrics-cloudflare
      host: agent-metrics.homelab.k3s.portefaix.xyz
      service: grafana-agent-metrics
      className: nginx
      annotations:
        external-dns.alpha.kubernetes.io/hostname: agent-metrics.homelab.k3s.portefaix.xyz
        nginx.ingress.kubernetes.io/auth-url: |-
          http://authentik.identity.svc.cluster.local/outpost.goauthentik.io/auth/nginx
        nginx.ingress.kubernetes.io/auth-signin: |-
          http://authentik.homelab.k3s.portefaix.xyz/outpost.goauthentik.io/start?rd=$escaped_request_uri
        nginx.ingress.kubernetes.io/auth-response-headers: |-
          Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
        nginx.ingress.kubernetes.io/auth-snippet: |
          proxy_set_header X-Forwarded-Host $http_host;
      labels:
        external-dns.io/provider: cloudflare
    logs:
    - name: agent-logs-external
      host: agent-logs.home.portefaix.xyz
      service: grafana-agent-logs
      className: nginx
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/icon: "logos:opentelemetry-icon"
        hajimari.io/appName: "Grafana Agent Logs"
        hajimari.io/group: "OpenTelemetry"
      labels: {}
    - name: agent-logs-cloudflare
      host: agent-logs.homelab.k3s.portefaix.xyz
      service: grafana-agent-logs
      className: nginx
      annotations:
        external-dns.alpha.kubernetes.io/hostname: agent-logs.homelab.k3s.portefaix.xyz
        nginx.ingress.kubernetes.io/auth-url: |-
          http://authentik.identity.svc.cluster.local/outpost.goauthentik.io/auth/nginx
        nginx.ingress.kubernetes.io/auth-signin: |-
          http://authentik.homelab.k3s.portefaix.xyz/outpost.goauthentik.io/start?rd=$escaped_request_uri
        nginx.ingress.kubernetes.io/auth-response-headers: |-
          Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
        nginx.ingress.kubernetes.io/auth-snippet: |
          proxy_set_header X-Forwarded-Host $http_host;
      labels:
        external-dns.io/provider: cloudflare
    traces:
    - name: agent-traces-external
      host: agent-traces.home.portefaix.xyz
      service: grafana-agent-traces
      className: nginx
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/icon: "logos:opentelemetry-icon"
        hajimari.io/appName: "Grafana Agent Traces"
        hajimari.io/group: "OpenTelemetry"
      labels: {}
    - name: agent-traces-cloudflare
      host: agent-traces.homelab.k3s.portefaix.xyz
      service: grafana-agent-traces
      className: nginx
      annotations:
        external-dns.alpha.kubernetes.io/hostname: agent-traces.homelab.k3s.portefaix.xyz
      nginx.ingress.kubernetes.io/auth-url: |-
        http://authentik.identity.svc.cluster.local/outpost.goauthentik.io/auth/nginx
      nginx.ingress.kubernetes.io/auth-signin: |-
        http://authentik.homelab.k3s.portefaix.xyz/outpost.goauthentik.io/start?rd=$escaped_request_uri
      nginx.ingress.kubernetes.io/auth-response-headers: |-
        Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;
      labels:
        external-dns.io/provider: cloudflare
    profiles:
    - name: agent-profiles-external
      host: agent-profiles.home.portefaix.xyz
      service: grafana-agent-profiles
      className: nginx
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/icon: "logos:opentelemetry-icon"
        hajimari.io/appName: "Grafana Agent Profiles"
        hajimari.io/group: "OpenTelemetry"
      labels: {}
    - name: agent-profiles-cloudflare
      host: agent-profiles.homelab.k3s.portefaix.xyz
      service: grafana-agent-profiles
      className: nginx
      annotations:
        external-dns.alpha.kubernetes.io/hostname: agent-profiles.homelab.k3s.portefaix.xyz
      nginx.ingress.kubernetes.io/auth-url: |-
        http://authentik.identity.svc.cluster.local/outpost.goauthentik.io/auth/nginx
      nginx.ingress.kubernetes.io/auth-signin: |-
        http://authentik.homelab.k3s.portefaix.xyz/outpost.goauthentik.io/start?rd=$escaped_request_uri
      nginx.ingress.kubernetes.io/auth-response-headers: |-
        Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;
      labels:
        external-dns.io/provider: cloudflare

# -- Additional annotations to add to all resources
additionalAnnotations: {}

# -- Additional labels to add to all resources
additionalLabels:
  portefaix.xyz/version: v0.46.0

cluster:
  name: portefaix-k3s-homelab

grafana-agent-metrics:
  agent:
    configMap:
      create: false
      # name: grafana-agent

    envFrom:
    - secretRef:
        name: grafana-agent-datadog-credentials
    - secretRef:
        name: grafana-agent-lightstep-credentials
    - secretRef:
        name: grafana-agent-grafanacloud-credentials
    resources:
      limits:
        # cpu: 100m
        memory: 2Gi
      requests:
        cpu: 200m
        memory: 500Mi

  configReloader:
    resources:
      limits:
        # cpu: 100m
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 10Mi

  controller:
    replicas: 1
    nodeSelector:
      portefaix.xyz/infra: core
      kubernetes.io/arch: amd64

  ingress:
    enabled: true
    ingressClassName: nginx
    path: /
    faroPort: 80
    pathType: Prefix
    hosts:
    - agent-metrics.192.168.0.62.nip.io
    tls: []

grafana-agent-logs:
  agent:
    configMap:
      create: false
      # name: grafana-agent

    mounts:
      varlog: true

    envFrom:
    - secretRef:
        name: grafana-agent-datadog-credentials
    - secretRef:
        name: grafana-agent-lightstep-credentials
    - secretRef:
        name: grafana-agent-grafanacloud-credentials

    resources:
      limits:
        # cpu: 100m
        memory: 600Mi
      requests:
        cpu: 200m
        memory: 200Mi

  configReloader:
    resources:
      limits:
        # cpu: 100m
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 10Mi

  controller:
    replicas: 1

  ingress:
    enabled: true
    ingressClassName: nginx
    path: /
    faroPort: 80
    pathType: Prefix
    hosts:
    - agent-logs.192.168.0.62.nip.io
    tls: []

grafana-agent-traces:
  agent:
    configMap:
      create: false
      # name: grafana-agent

    envFrom:
    - secretRef:
        name: grafana-agent-datadog-credentials
    - secretRef:
        name: grafana-agent-lightstep-credentials
    - secretRef:
        name: grafana-agent-grafanacloud-credentials
    resources:
      limits:
        # cpu: 100m
        memory: 500Mi
      requests:
        cpu: 200m
        memory: 100Mi

  configReloader:
    resources:
      limits:
        # cpu: 100m
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 10Mi

  controller:
    replicas: 1

  ingress:
    enabled: true
    ingressClassName: nginx
    path: /
    faroPort: 80
    pathType: Prefix
    hosts:
    - agent-traces.192.168.0.62.nip.io
    tls: []

grafana-agent-profiles:
  agent:
    configMap:
      create: false
      # name: grafana-agent

    envFrom:
    - secretRef:
        name: grafana-agent-datadog-credentials
    - secretRef:
        name: grafana-agent-lightstep-credentials
    - secretRef:
        name: grafana-agent-grafanacloud-credentials
    resources:
      limits:
        # cpu: 100m
        memory: 500Mi
      requests:
        cpu: 200m
        memory: 100Mi

  configReloader:
    resources:
      limits:
        # cpu: 100m
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 10Mi

  controller:
    replicas: 1
    podAnnotations:
      profiles.grafana.com/memory.scrape: "true"
      profiles.grafana.com/memory.port_name: "http-metrics"
      profiles.grafana.com/cpu.scrape: "true"
      profiles.grafana.com/cpu.port_name: "http-metrics"
      profiles.grafana.com/goroutine.scrape: "true"
      profiles.grafana.com/goroutine.port_name: "http-metrics"

  ingress:
    enabled: true
    ingressClassName: nginx
    path: /
    faroPort: 80
    pathType: Prefix
    hosts:
    - agent-profiles.192.168.0.62.nip.io
    tls: []
