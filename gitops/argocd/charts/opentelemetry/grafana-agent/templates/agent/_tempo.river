{{ define "agent.config.tempo" }}

// ********************************************
// * T E M P O
// ********************************************

// [Local]

otelcol.exporter.otlp "local" {
  client {
    endpoint = {{ .Values.observability.traces.tempo | quote }}
    tls {
      insecure = true
      insecure_skip_verify = true
    }
  }
}

// [Grafana Cloud]

otelcol.auth.basic "grafana_cloud" {
  username = env("GRAFANA_CLOUD_TRACES_ID")
  password = env("GRAFANA_CLOUD_TRACES_APIKEY")
}

otelcol.exporter.otlp "grafana_cloud" {
  client {
    endpoint = {{ .Values.observability.traces.grafana_cloud | quote }}
    auth = otelcol.auth.basic.grafana_cloud.handler
  }
}

otelcol.receiver.otlp "core" {
  grpc {
    endpoint = "0.0.0.0:4317"
  }
  http {
    endpoint = "0.0.0.0:4318"
  }

  output {
    traces  = [otelcol.processor.batch.core.input]
  }
}

otelcol.processor.batch "core" {
  send_batch_max_size = 1000
  timeout = "15s"
  send_batch_size = 800

  output {
    # traces  = [otelcol.processor.memory_limiter.core.input]
    traces = [otelcol.processor.attributes.core.input]
  }
}

otelcol.processor.attributes "core" {
  action {
    key = "cluster"
    value = {{ .Values.observability.cluster_name | quote }}
    action = "insert"
  }
  output {
    traces = [otelcol.processor.memory_limiter.core.input]
  }
}

otelcol.processor.memory_limiter "core" {
  limit_percentage = 90
  spike_limit_percentage = 30
  check_interval = "5s"

  output {
    traces  = [
      otelcol.exporter.otlp.local.input,
      // otelcol.exporter.otlp.grafana_cloud.input,
    ]
  }
}

{{ end }}
