# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
mode: deployment

extraEnvs:
  - name: "K8S_NODE_NAME"
    valueFrom:
      fieldRef:
        fieldPath: "spec.nodeName"
  - name: "K8S_POD_NAME"
    valueFrom:
      fieldRef:
        fieldPath: "metadata.name"
  - name: "K8S_NAMESPACE"
    valueFrom:
      fieldRef:
        fieldPath: "metadata.namespace"

ports:
  - name: metric
    port: 9090
    protocol: TCP
    targetPort: 9090

resources:
  limits:
    # cpu: 500m
    memory: 1Gi
  requests:
    cpu: 100m
    memory: 512Mi

serviceMonitor:
  enabled: true
  extraLabels:
    monitoring: portefaix

config:
  receivers:

    hostmetrics:
      collection_interval: 60s
      scrapers:
        cpu: {}
        load: {}
        memory: {}
        disk: {}
        filesystem: {}
        network: {}

    jaeger:
      protocols:
        grpc:
          endpoint: 0.0.0.0:14250
        thrift_http:
          endpoint: 0.0.0.0:14268
        thrift_compact:
          endpoint: 0.0.0.0:6831

    otlp:
      protocols:
        grpc:
          endpoint: 0.0.0.0:4317
        http:
          endpoint: 0.0.0.0:4318

    # Collect own metrics
    prometheus:
      config:
        global:
          scrape_interval: 30s
          scrape_timeout: 10s
          evaluation_interval: 10s
          external_labels:
            cluster: portefaix-local
        scrape_configs:
          - job_name: 'kubernetes-kubelet'
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: true
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            kubernetes_sd_configs:
            - role: node
            relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc.cluster.local:443
            - source_labels: [__meta_kubernetes_node_name]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/$${1}/proxy/metrics
          - job_name: 'kubelet'
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: true
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            kubernetes_sd_configs:
            - role: node
            relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc.cluster.local:443
            - source_labels: [__meta_kubernetes_node_name]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/$${1}/proxy/metrics/cadvisor
          - job_name: serviceMonitor/default/kube-prometheus-stack-prometheus-node-exporter/0
            honor_timestamps: true
            scrape_interval: 30s
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: http
            follow_redirects: true
            enable_http2: true
            relabel_configs:
            - source_labels: [job]
              separator: ;
              regex: (.*)
              target_label: __tmp_prometheus_job_name
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]
              separator: ;
              regex: (prometheus-node-exporter);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]
              separator: ;
              regex: (kube-prometheus-stack);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              separator: ;
              regex: http-metrics
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Node;(.*)
              target_label: node
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Pod;(.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_namespace]
              separator: ;
              regex: (.*)
              target_label: namespace
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: service
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_name]
              separator: ;
              regex: (.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_container_name]
              separator: ;
              regex: (.*)
              target_label: container
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: job
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_jobLabel]
              separator: ;
              regex: (.+)
              target_label: job
              replacement: $$1
              action: replace
            - separator: ;
              regex: (.*)
              target_label: endpoint
              replacement: http-metrics
              action: replace
            - source_labels: [__address__]
              separator: ;
              regex: (.*)
              modulus: 1
              target_label: __tmp_hash
              replacement: $$1
              action: hashmod
            - source_labels: [__tmp_hash]
              separator: ;
              regex: "0"
              replacement: $$1
              action: keep
            kubernetes_sd_configs:
              - role: endpoints
                kubeconfig_file: ""
                follow_redirects: true
                enable_http2: true
                namespaces:
                  own_namespace: false
                  names:
                  - default
          - job_name: serviceMonitor/default/kube-prometheus-stack-prometheus/0
            honor_timestamps: true
            scrape_interval: 30s
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: http
            follow_redirects: true
            enable_http2: true
            relabel_configs:
            - source_labels: [job]
              separator: ;
              regex: (.*)
              target_label: __tmp_prometheus_job_name
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]
              separator: ;
              regex: (kube-prometheus-stack-prometheus);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]
              separator: ;
              regex: (kube-prometheus-stack);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_service_label_self_monitor, __meta_kubernetes_service_labelpresent_self_monitor]
              separator: ;
              regex: (true);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              separator: ;
              regex: http-web
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Node;(.*)
              target_label: node
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Pod;(.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_namespace]
              separator: ;
              regex: (.*)
              target_label: namespace
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: service
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_name]
              separator: ;
              regex: (.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_container_name]
              separator: ;
              regex: (.*)
              target_label: container
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: job
              replacement: $$1
              action: replace
            - separator: ;
              regex: (.*)
              target_label: endpoint
              replacement: http-web
              action: replace
            - source_labels: [__address__]
              separator: ;
              regex: (.*)
              modulus: 1
              target_label: __tmp_hash
              replacement: $$1
              action: hashmod
            - source_labels: [__tmp_hash]
              separator: ;
              regex: "0"
              replacement: $$1
              action: keep
            kubernetes_sd_configs:
              - role: endpoints
                kubeconfig_file: ""
                follow_redirects: true
                enable_http2: true
                namespaces:
                  own_namespace: false
                  names:
                  - default
          - job_name: serviceMonitor/default/kube-prometheus-stack-operator/0
            honor_labels: true
            honor_timestamps: true
            scrape_interval: 30s
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: true
            follow_redirects: true
            enable_http2: true
            relabel_configs:
            - source_labels: [job]
              separator: ;
              regex: (.*)
              target_label: __tmp_prometheus_job_name
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]
              separator: ;
              regex: (kube-prometheus-stack-operator);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]
              separator: ;
              regex: (kube-prometheus-stack);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              separator: ;
              regex: https
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Node;(.*)
              target_label: node
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Pod;(.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_namespace]
              separator: ;
              regex: (.*)
              target_label: namespace
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: service
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_name]
              separator: ;
              regex: (.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_container_name]
              separator: ;
              regex: (.*)
              target_label: container
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: job
              replacement: $$1
              action: replace
            - separator: ;
              regex: (.*)
              target_label: endpoint
              replacement: https
              action: replace
            - source_labels: [__address__]
              separator: ;
              regex: (.*)
              modulus: 1
              target_label: __tmp_hash
              replacement: $$1
              action: hashmod
            - source_labels: [__tmp_hash]
              separator: ;
              regex: "0"
              replacement: $$1
              action: keep
            kubernetes_sd_configs:
              - role: endpoints
                kubeconfig_file: ""
                follow_redirects: true
                enable_http2: true
                namespaces:
                  own_namespace: false
                  names:
                  - default
          - job_name: serviceMonitor/default/kube-prometheus-stack-kubelet/2
            honor_labels: true
            honor_timestamps: true
            scrape_interval: 30s
            scrape_timeout: 10s
            metrics_path: /metrics/probes
            scheme: https
            authorization:
              type: Bearer
              credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: true
            follow_redirects: true
            enable_http2: true
            relabel_configs:
            - source_labels: [job]
              separator: ;
              regex: (.*)
              target_label: __tmp_prometheus_job_name
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name, __meta_kubernetes_service_labelpresent_app_kubernetes_io_name]
              separator: ;
              regex: (kubelet);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_service_label_k8s_app, __meta_kubernetes_service_labelpresent_k8s_app]
              separator: ;
              regex: (kubelet);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              separator: ;
              regex: https-metrics
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Node;(.*)
              target_label: node
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Pod;(.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_namespace]
              separator: ;
              regex: (.*)
              target_label: namespace
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: service
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_name]
              separator: ;
              regex: (.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_container_name]
              separator: ;
              regex: (.*)
              target_label: container
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: job
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_k8s_app]
              separator: ;
              regex: (.+)
              target_label: job
              replacement: $$1
              action: replace
            - separator: ;
              regex: (.*)
              target_label: endpoint
              replacement: https-metrics
              action: replace
            - source_labels: [__metrics_path__]
              separator: ;
              regex: (.*)
              target_label: metrics_path
              replacement: $$1
              action: replace
            - source_labels: [__address__]
              separator: ;
              regex: (.*)
              modulus: 1
              target_label: __tmp_hash
              replacement: $$1
              action: hashmod
            - source_labels: [__tmp_hash]
              separator: ;
              regex: "0"
              replacement: $$1
              action: keep
            kubernetes_sd_configs:
              - role: endpoints
                kubeconfig_file: ""
                follow_redirects: true
                enable_http2: true
                namespaces:
                  own_namespace: false
                  names:
                  - kube-system
          - job_name: serviceMonitor/default/kube-prometheus-stack-kubelet/1
            honor_labels: true
            honor_timestamps: true
            scrape_interval: 30s
            scrape_timeout: 10s
            metrics_path: /metrics/cadvisor
            scheme: https
            authorization:
              type: Bearer
              credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: true
            follow_redirects: true
            enable_http2: true
            relabel_configs:
            - source_labels: [job]
              separator: ;
              regex: (.*)
              target_label: __tmp_prometheus_job_name
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name, __meta_kubernetes_service_labelpresent_app_kubernetes_io_name]
              separator: ;
              regex: (kubelet);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_service_label_k8s_app, __meta_kubernetes_service_labelpresent_k8s_app]
              separator: ;
              regex: (kubelet);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              separator: ;
              regex: https-metrics
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Node;(.*)
              target_label: node
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Pod;(.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_namespace]
              separator: ;
              regex: (.*)
              target_label: namespace
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: service
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_name]
              separator: ;
              regex: (.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_container_name]
              separator: ;
              regex: (.*)
              target_label: container
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: job
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_k8s_app]
              separator: ;
              regex: (.+)
              target_label: job
              replacement: $$1
              action: replace
            - separator: ;
              regex: (.*)
              target_label: endpoint
              replacement: https-metrics
              action: replace
            - source_labels: [__metrics_path__]
              separator: ;
              regex: (.*)
              target_label: metrics_path
              replacement: $$1
              action: replace
            - source_labels: [__address__]
              separator: ;
              regex: (.*)
              modulus: 1
              target_label: __tmp_hash
              replacement: $$1
              action: hashmod
            - source_labels: [__tmp_hash]
              separator: ;
              regex: "0"
              replacement: $$1
              action: keep
            kubernetes_sd_configs:
              - role: endpoints
                kubeconfig_file: ""
                follow_redirects: true
                enable_http2: true
                namespaces:
                  own_namespace: false
                  names:
                  - kube-system
          - job_name: serviceMonitor/default/kube-prometheus-stack-kubelet/0
            honor_labels: true
            honor_timestamps: true
            scrape_interval: 30s
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: https
            authorization:
              type: Bearer
              credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: true
            follow_redirects: true
            enable_http2: true
            relabel_configs:
            - source_labels: [job]
              separator: ;
              regex: (.*)
              target_label: __tmp_prometheus_job_name
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name, __meta_kubernetes_service_labelpresent_app_kubernetes_io_name]
              separator: ;
              regex: (kubelet);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_service_label_k8s_app, __meta_kubernetes_service_labelpresent_k8s_app]
              separator: ;
              regex: (kubelet);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              separator: ;
              regex: https-metrics
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Node;(.*)
              target_label: node
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Pod;(.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_namespace]
              separator: ;
              regex: (.*)
              target_label: namespace
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: service
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_name]
              separator: ;
              regex: (.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_container_name]
              separator: ;
              regex: (.*)
              target_label: container
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: job
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_k8s_app]
              separator: ;
              regex: (.+)
              target_label: job
              replacement: $$1
              action: replace
            - separator: ;
              regex: (.*)
              target_label: endpoint
              replacement: https-metrics
              action: replace
            - source_labels: [__metrics_path__]
              separator: ;
              regex: (.*)
              target_label: metrics_path
              replacement: $$1
              action: replace
            - source_labels: [__address__]
              separator: ;
              regex: (.*)
              modulus: 1
              target_label: __tmp_hash
              replacement: $$1
              action: hashmod
            - source_labels: [__tmp_hash]
              separator: ;
              regex: "0"
              replacement: $$1
              action: keep
            kubernetes_sd_configs:
              - role: endpoints
                kubeconfig_file: ""
                follow_redirects: true
                enable_http2: true
                namespaces:
                  own_namespace: false
                  names:
                  - kube-system
          - job_name: serviceMonitor/default/kube-prometheus-stack-kube-state-metrics/0
            honor_labels: true
            honor_timestamps: true
            scrape_interval: 30s
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: http
            follow_redirects: true
            enable_http2: true
            relabel_configs:
            - source_labels: [job]
              separator: ;
              regex: (.*)
              target_label: __tmp_prometheus_job_name
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_instance, __meta_kubernetes_service_labelpresent_app_kubernetes_io_instance]
              separator: ;
              regex: (kube-prometheus-stack);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name, __meta_kubernetes_service_labelpresent_app_kubernetes_io_name]
              separator: ;
              regex: (kube-state-metrics);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              separator: ;
              regex: http
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Node;(.*)
              target_label: node
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Pod;(.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_namespace]
              separator: ;
              regex: (.*)
              target_label: namespace
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: service
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_name]
              separator: ;
              regex: (.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_container_name]
              separator: ;
              regex: (.*)
              target_label: container
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: job
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
              separator: ;
              regex: (.+)
              target_label: job
              replacement: $$1
              action: replace
            - separator: ;
              regex: (.*)
              target_label: endpoint
              replacement: http
              action: replace
            - source_labels: [__address__]
              separator: ;
              regex: (.*)
              modulus: 1
              target_label: __tmp_hash
              replacement: $$1
              action: hashmod
            - source_labels: [__tmp_hash]
              separator: ;
              regex: "0"
              replacement: $$1
              action: keep
            kubernetes_sd_configs:
              - role: endpoints
                kubeconfig_file: ""
                follow_redirects: true
                enable_http2: true
                namespaces:
                  own_namespace: false
                  names:
                  - default
          - job_name: serviceMonitor/default/kube-prometheus-stack-kube-scheduler/0
            honor_timestamps: true
            scrape_interval: 30s
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: http
            authorization:
              type: Bearer
              credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            follow_redirects: true
            enable_http2: true
            relabel_configs:
            - source_labels: [job]
              separator: ;
              regex: (.*)
              target_label: __tmp_prometheus_job_name
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]
              separator: ;
              regex: (kube-prometheus-stack-kube-scheduler);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]
              separator: ;
              regex: (kube-prometheus-stack);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              separator: ;
              regex: http-metrics
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Node;(.*)
              target_label: node
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Pod;(.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_namespace]
              separator: ;
              regex: (.*)
              target_label: namespace
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: service
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_name]
              separator: ;
              regex: (.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_container_name]
              separator: ;
              regex: (.*)
              target_label: container
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: job
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_jobLabel]
              separator: ;
              regex: (.+)
              target_label: job
              replacement: $$1
              action: replace
            - separator: ;
              regex: (.*)
              target_label: endpoint
              replacement: http-metrics
              action: replace
            - source_labels: [__address__]
              separator: ;
              regex: (.*)
              modulus: 1
              target_label: __tmp_hash
              replacement: $$1
              action: hashmod
            - source_labels: [__tmp_hash]
              separator: ;
              regex: "0"
              replacement: $$1
              action: keep
            kubernetes_sd_configs:
              - role: endpoints
                kubeconfig_file: ""
                follow_redirects: true
                enable_http2: true
                namespaces:
                  own_namespace: false
                  names:
                  - kube-system
          - job_name: serviceMonitor/default/kube-prometheus-stack-kube-proxy/0
            honor_timestamps: true
            scrape_interval: 30s
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: http
            authorization:
              type: Bearer
              credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            follow_redirects: true
            enable_http2: true
            relabel_configs:
            - source_labels: [job]
              separator: ;
              regex: (.*)
              target_label: __tmp_prometheus_job_name
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]
              separator: ;
              regex: (kube-prometheus-stack-kube-proxy);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]
              separator: ;
              regex: (kube-prometheus-stack);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              separator: ;
              regex: http-metrics
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Node;(.*)
              target_label: node
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Pod;(.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_namespace]
              separator: ;
              regex: (.*)
              target_label: namespace
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: service
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_name]
              separator: ;
              regex: (.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_container_name]
              separator: ;
              regex: (.*)
              target_label: container
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: job
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_jobLabel]
              separator: ;
              regex: (.+)
              target_label: job
              replacement: $$1
              action: replace
            - separator: ;
              regex: (.*)
              target_label: endpoint
              replacement: http-metrics
              action: replace
            - source_labels: [__address__]
              separator: ;
              regex: (.*)
              modulus: 1
              target_label: __tmp_hash
              replacement: $$1
              action: hashmod
            - source_labels: [__tmp_hash]
              separator: ;
              regex: "0"
              replacement: $$1
              action: keep
            kubernetes_sd_configs:
              - role: endpoints
                kubeconfig_file: ""
                follow_redirects: true
                enable_http2: true
                namespaces:
                  own_namespace: false
                  names:
                  - kube-system
          - job_name: serviceMonitor/default/kube-prometheus-stack-kube-etcd/0
            honor_timestamps: true
            scrape_interval: 30s
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: http
            authorization:
              type: Bearer
              credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            follow_redirects: true
            enable_http2: true
            relabel_configs:
            - source_labels: [job]
              separator: ;
              regex: (.*)
              target_label: __tmp_prometheus_job_name
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]
              separator: ;
              regex: (kube-prometheus-stack-kube-etcd);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]
              separator: ;
              regex: (kube-prometheus-stack);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              separator: ;
              regex: http-metrics
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Node;(.*)
              target_label: node
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Pod;(.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_namespace]
              separator: ;
              regex: (.*)
              target_label: namespace
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: service
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_name]
              separator: ;
              regex: (.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_container_name]
              separator: ;
              regex: (.*)
              target_label: container
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: job
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_jobLabel]
              separator: ;
              regex: (.+)
              target_label: job
              replacement: $$1
              action: replace
            - separator: ;
              regex: (.*)
              target_label: endpoint
              replacement: http-metrics
              action: replace
            - source_labels: [__address__]
              separator: ;
              regex: (.*)
              modulus: 1
              target_label: __tmp_hash
              replacement: $$1
              action: hashmod
            - source_labels: [__tmp_hash]
              separator: ;
              regex: "0"
              replacement: $$1
              action: keep
            kubernetes_sd_configs:
              - role: endpoints
                kubeconfig_file: ""
                follow_redirects: true
                enable_http2: true
                namespaces:
                  own_namespace: false
                  names:
                  - kube-system
          - job_name: serviceMonitor/default/kube-prometheus-stack-kube-controller-manager/0
            honor_timestamps: true
            scrape_interval: 30s
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: http
            authorization:
              type: Bearer
              credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            follow_redirects: true
            enable_http2: true
            relabel_configs:
            - source_labels: [job]
              separator: ;
              regex: (.*)
              target_label: __tmp_prometheus_job_name
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]
              separator: ;
              regex: (kube-prometheus-stack-kube-controller-manager);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]
              separator: ;
              regex: (kube-prometheus-stack);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              separator: ;
              regex: http-metrics
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Node;(.*)
              target_label: node
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Pod;(.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_namespace]
              separator: ;
              regex: (.*)
              target_label: namespace
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: service
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_name]
              separator: ;
              regex: (.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_container_name]
              separator: ;
              regex: (.*)
              target_label: container
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: job
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_jobLabel]
              separator: ;
              regex: (.+)
              target_label: job
              replacement: $$1
              action: replace
            - separator: ;
              regex: (.*)
              target_label: endpoint
              replacement: http-metrics
              action: replace
            - source_labels: [__address__]
              separator: ;
              regex: (.*)
              modulus: 1
              target_label: __tmp_hash
              replacement: $$1
              action: hashmod
            - source_labels: [__tmp_hash]
              separator: ;
              regex: "0"
              replacement: $$1
              action: keep
            kubernetes_sd_configs:
              - role: endpoints
                kubeconfig_file: ""
                follow_redirects: true
                enable_http2: true
                namespaces:
                  own_namespace: false
                  names:
                  - kube-system
          - job_name: serviceMonitor/default/kube-prometheus-stack-coredns/0
            honor_timestamps: true
            scrape_interval: 30s
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: http
            authorization:
              type: Bearer
              credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            follow_redirects: true
            enable_http2: true
            relabel_configs:
            - source_labels: [job]
              separator: ;
              regex: (.*)
              target_label: __tmp_prometheus_job_name
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]
              separator: ;
              regex: (kube-prometheus-stack-coredns);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]
              separator: ;
              regex: (kube-prometheus-stack);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              separator: ;
              regex: http-metrics
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Node;(.*)
              target_label: node
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Pod;(.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_namespace]
              separator: ;
              regex: (.*)
              target_label: namespace
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: service
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_name]
              separator: ;
              regex: (.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_container_name]
              separator: ;
              regex: (.*)
              target_label: container
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: job
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_jobLabel]
              separator: ;
              regex: (.+)
              target_label: job
              replacement: $$1
              action: replace
            - separator: ;
              regex: (.*)
              target_label: endpoint
              replacement: http-metrics
              action: replace
            - source_labels: [__address__]
              separator: ;
              regex: (.*)
              modulus: 1
              target_label: __tmp_hash
              replacement: $$1
              action: hashmod
            - source_labels: [__tmp_hash]
              separator: ;
              regex: "0"
              replacement: $$1
              action: keep
            kubernetes_sd_configs:
              - role: endpoints
                kubeconfig_file: ""
                namespaces:
                  own_namespace: false
                  names:
                  - kube-system
          - job_name: serviceMonitor/default/kube-prometheus-stack-apiserver/0
            honor_timestamps: true
            scrape_interval: 30s
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: https
            authorization:
              type: Bearer
              credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server_name: kubernetes
            follow_redirects: true
            enable_http2: true
            relabel_configs:
            - source_labels: [job]
              separator: ;
              regex: (.*)
              target_label: __tmp_prometheus_job_name
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_component, __meta_kubernetes_service_labelpresent_component]
              separator: ;
              regex: (kubernetes);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              separator: ;
              regex: https
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Node;(.*)
              target_label: node
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Pod;(.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_namespace]
              separator: ;
              regex: (.*)
              target_label: namespace
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: service
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_name]
              separator: ;
              regex: (.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_container_name]
              separator: ;
              regex: (.*)
              target_label: container
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: job
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_component]
              separator: ;
              regex: (.+)
              target_label: job
              replacement: $$1
              action: replace
            - separator: ;
              regex: (.*)
              target_label: endpoint
              replacement: https
              action: replace
            - source_labels: [__address__]
              separator: ;
              regex: (.*)
              modulus: 1
              target_label: __tmp_hash
              replacement: $$1
              action: hashmod
            - source_labels: [__tmp_hash]
              separator: ;
              regex: "0"
              replacement: $$1
              action: keep
            kubernetes_sd_configs:
              - role: endpoints
                kubeconfig_file: ""
                follow_redirects: true
                enable_http2: true
                namespaces:
                  own_namespace: false
                  names:
                  - default
          - job_name: serviceMonitor/default/kube-prometheus-stack-alertmanager/0
            honor_timestamps: true
            scrape_interval: 30s
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: http
            follow_redirects: true
            enable_http2: true
            relabel_configs:
            - source_labels: [job]
              separator: ;
              regex: (.*)
              target_label: __tmp_prometheus_job_name
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]
              separator: ;
              regex: (kube-prometheus-stack-alertmanager);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_service_label_release, __meta_kubernetes_service_labelpresent_release]
              separator: ;
              regex: (kube-prometheus-stack);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_service_label_self_monitor, __meta_kubernetes_service_labelpresent_self_monitor]
              separator: ;
              regex: (true);true
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              separator: ;
              regex: http-web
              replacement: $$1
              action: keep
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Node;(.*)
              target_label: node
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Pod;(.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_namespace]
              separator: ;
              regex: (.*)
              target_label: namespace
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: service
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_name]
              separator: ;
              regex: (.*)
              target_label: pod
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_pod_container_name]
              separator: ;
              regex: (.*)
              target_label: container
              replacement: $$1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: job
              replacement: $$1
              action: replace
            - separator: ;
              regex: (.*)
              target_label: endpoint
              replacement: http-web
              action: replace
            - source_labels: [__address__]
              separator: ;
              regex: (.*)
              modulus: 1
              target_label: __tmp_hash
              replacement: $$1
              action: hashmod
            - source_labels: [__tmp_hash]
              separator: ;
              regex: "0"
              replacement: $$1
              action: keep
            kubernetes_sd_configs:
              - role: endpoints
                kubeconfig_file: ""
                follow_redirects: true
                enable_http2: true
                namespaces:
                  own_namespace: false
                  names:
                  - default
          - job_name: 'kube-state-metrics'
            static_configs:
              - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']
          - job_name: 'node-exporter'
            kubernetes_sd_configs:
              - role: endpoints

    # zipkin:
    #   endpoint: 0.0.0.0:9411

    # k8s_cluster:
    #   collection_interval: 60s
    #   distribution: kubernetes
    #   node_conditions_to_report: [Ready, DiskPressure, MemoryPressure, PIDPressure, NetworkUnavailable]
    #   allocatable_types_to_report: [cpu, memory, ephemeral-storage, storage]

    # k8s_events:
    #   auth_type: "serviceAccount"

    # kubeletstats:
    #   collection_interval: 60s
    #   auth_type: "serviceAccount"
    #   endpoint: "${K8S_NODE_NAME}:10250"
    #   insecure_skip_verify: true

  processors:

    batch:
      send_batch_max_size: 1000
      timeout: 30s
      send_batch_size : 800

    # Data sources: traces, metrics, logs
    memory_limiter:
      limit_percentage: 90
      spike_limit_percentage: 30
      check_interval: 5s

    # metricstransform:
    #   transforms:
    #      include: .+
    #      match_type: regexp
    #      action: update
    #      operations:
    #        - action: add_label
    #          new_label: kubernetes.cluster.id
    #          new_value: kind-local
    #        - action: add_label
    #          new_label: kubernetes.name
    #          new_value: local

    # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/processor/resourcedetectionprocessor/README.md
    resourcedetection/aws:
      detectors: [env, ec2, eks]
      timeout: 2s
      override: true

    # k8sattributes:
    #   auth_type: serviceAccount
    #   passthrough: false
    #   filter:
    #     node_from_env_var: K8S_NODE_NAME
    #   extract:
    #     metadata:
    #       - k8s.pod.name
    #       - k8s.pod.uid
    #       - k8s.deployment.name
    #       - k8s.cluster.name
    #       - k8s.namespace.name
    #       - k8s.node.name
    #       - k8s.pod.start_time
    #   pod_association:
    #     - from: resource_attribute
    #       name: k8s.pod.uid

  exporters:

    logging:
      loglevel: info

    prometheus:
      endpoint: "0.0.0.0:9090"
      metric_expiration: 180m
      resource_to_telemetry_conversion:
        enabled: true

    # Data sources: metrics
    prometheusremotewrite/amp:
      endpoint: https://aps-workspaces.eu-west-1.amazonaws.com/workspaces/ws-xxxxxxxxxxxxxxxxxxx/api/v1/remote_write
      auth:
        authenticator: sigv4auth
        region: eu-west-1
      writeRelabelConfigs:
        - regex: "aws_.*|node_.*"
          sourceLabels: ["__name__"]
          action: "keep"

    # Data sources: logs
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/exporter/lokiexporter/README.md
    loki:
      endpoint: "http://loki.logging.svc.cluster.local:3100/loki/api/v1/push"
      tenant_id: "local"
      labels:
        resource:
          # Allowing 'container.name' attribute and transform it to 'container_name', which is a valid Loki label name.
          container.name: "container_name"
          k8s.cluster.name: "k8s_cluster_name"
          k8s.event.reason: "k8s_event_reason"
          k8s.object.kind: "k8s_object_kind"
          k8s.object.name: "k8s_object_name"
          k8s.object.uid: "k8s_object_uid"
          k8s.object.fieldpath: "k8s_object_fieldpath"
          k8s.object.api_version: "k8s_object_api_version"
        attributes:
          k8s.event.reason: "k8s_event_reason"
          k8s.event.action: "k8s_event_action"
          k8s.event.start_time: "k8s_event_start_time"
          k8s.event.name: "k8s_event_name"
          k8s.event.uid: "k8s_event_uid"
          k8s.namespace.name: "k8s_namespace_name"
          k8s.event.count: "k8s_event_count"
        record:
          # Adds 'traceID' as a log label, seen as 'traceid' in Loki.
          traceID: "traceid"
      # headers:
      #   "X-Custom-Header": "portefaix_homelab"

    # Data sources: traces, metrics, logs
    otlp/tempo:
      endpoint: tempo.tracing.svc.cluster.local:4317
      tls:
        insecure_skip_verify: true
        insecure: true

    # Data sources: traces, metrics, logs
    # otlp/honeycomb:
    #   endpoint: "api.honeycomb.io:443"
    #   headers:
    #     "x-honeycomb-team": "${HONEYCOMB_API_KEY}"
    #     "x-honeycomb-dataset": "portefaix-homelab" # for Metrics

    # Data sources: traces, metrics, logs
    # otlp/aspecto:
    #   endpoint: otelcol.aspecto.io:4317
    #   headers:
    #     Authorization: ${ASPECTO_API_KEY}

    # datadog:
    #   env: prod
    #   service: opentelemetry
    #   tags:
    #     - cloud:homelab
    #   api:
    #     key: ${DATADOG_API_KEY}
    #     site: datadoghq.eu

    # mezmo:
    #   ingest_url: "https://logs.logdna.com/log/ingest"
    #   ingest_key: "${MEZMO_API_KEY}"

  extensions:

    health_check:

    memory_ballast:
      size_in_percentage: 20

    # k8s_observer:
    #   auth_type: serviceAccount
    #   node: ${K8S_NODE_NAME}
    #   observe_pods: true
    #   observe_nodes: true

    pprof:
      endpoint: :1888

    zpages:
      endpoint: :55679

  service:

    telemetry:
      metrics:
        address: 0.0.0.0:8888

    extensions:
      - health_check
      - memory_ballast
      # - k8s_observer
      - pprof
      - zpages

    pipelines:

      logs:
        receivers:
          - otlp
          # - k8s_events
        processors:
          - batch
          # - k8sattributes
          - memory_limiter
        exporters:
          - logging
          # - loki

      metrics:
        receivers:
          - hostmetrics
          - prometheus
          # - k8s_cluster
          # - kubeletstats
          # - receiver_creator
          - otlp
        processors:
          # - memory_limiter
          # - metricstransform
          # - k8sattributes
          - resourcedetection/aws
          - batch
        exporters:
          - logging
          - prometheus
          # - prometheusremotewrite/mimir
          - prometheusremotewrite/amp
          # - datadog

      traces:
        receivers:
          - otlp
        processors:
          - batch
          # - k8sattributes
          - memory_limiter
        exporters:
          - logging
          # - otlp/tempo
