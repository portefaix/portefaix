# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: lifecycle.keptn.sh/v1alpha2
kind: KeptnTaskDefinition
metadata:
  labels:
    {{- include "klt-podtato-head.labels" . | indent 4 }}
  name: {{ include "klt-podtato-head.name" . }}-notify-slack
  namespace: {{ .Release.Namespace }}
spec:
  function:
    inline:
      code: |
        let text = Deno.env.get("SECURE_DATA");
        let context = Deno.env.get("CONTEXT");
        let data;
        let body;
        let contextdata;
        if (text != undefined) {
            data = JSON.parse(text);
        }
        if (context != undefined) {
            contextdata = JSON.parse(context);
        }
        if (contextdata.objectType == "Application") {
            body = `{
                    "text": "Application ${contextdata.appName}, Version ${contextdata.appVersion} has been deployed"
                  }`
        }
        if (contextdata.objectType == "Workload") {
            body = `{
                      "username" : "keptn",
                      "blocks": [
                        {
                          "type": "section",
                          "text": {
                            "type": "mrkdwn",
                            "text": "Workload *${contextdata.workloadName}* notification!!"
                          }
                        },
                        {
                          "type": "section",
                          "text": {
                            "type": "mrkdwn",
                            "text": "*Version:* ${contextdata.workloadVersion}\n*App:* ${contextdata.appName}"
                          }
                        }
                      ]
                    }`
        }
        console.log(body)
        // let resp = await fetch("https://hooks.slack.com/services/" + data.slack_hook, {
        //     method: "POST",
        //     body,
        // });
        // console.log(resp)
    # secureParameters:
    #   secret: slack-notification
