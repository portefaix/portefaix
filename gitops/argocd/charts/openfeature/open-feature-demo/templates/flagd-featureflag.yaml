# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: core.openfeature.dev/v1alpha3
kind: FlagSourceConfiguration
metadata:
  {{- if .Values.additionalAnnotations }}
  annotations:
  {{ toYaml .Values.additionalAnnotations | indent 4 }}
  {{- end }}
  labels:
    {{- include "open-feature-demo.labels" . | indent 4 }}
  name: source-configuration
  namespace: {{ .Release.Namespace }}
spec:
    metricsPort: 8080
    evaluator: json
    defaultSyncProvider: kubernetes
    tag: v0.4.4
    sources:
    - source: openfeature/server-side
      provider: kubernetes
    - source: openfeature/client-side
      provider: kubernetes
    probesEnabled: true
---
apiVersion: core.openfeature.dev/v1alpha2
kind: FeatureFlagConfiguration
metadata:
  name: client-side
  namespace: {{ .Release.Namespace }}
spec:
  featureFlagSpec:
    flags:
      new-welcome-message:
        state: ENABLED
        variants:
          'on': true
          'off': false
        defaultVariant: 'off'
      hex-color:
        variants:
          red: c05543
          green: 2f5230
          blue: 0d507b
        defaultVariant: red
        state: ENABLED
---
apiVersion: core.openfeature.dev/v1alpha2
kind: FeatureFlagConfiguration
metadata:
  name: server-side
  namespace: {{ .Release.Namespace }}
spec:
  featureFlagSpec:
    flags:
      fib-algo:
        variants:
          recursive: recursive
          memo: memo
          loop: loop
          binet: binet
        defaultVariant: recursive
        state: ENABLED
        targeting: {
          "if": [
            {
              "in": ["@faas.com", {
                "var": ["email"]
              }]
            }, "binet", null
          ]
        }
