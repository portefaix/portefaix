---
# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

ingress:
  enabled: true
  entries:
  - name: kargo-external
    host: kargo.home.portefaix.xyz
    # className: nginx
    className: traefik
    annotations:
      gethomepage.dev/enabled: "true"
      gethomepage.dev/name: "Kargo"
      gethomepage.dev/description: "Continuous delivery and application lifecycle orchestration platform for Kubernetes"
      gethomepage.dev/group: "GitOps"
      gethomepage.dev/icon: "https://kargo.akuity.io/img/kargo.png"
      traefik.ingress.kubernetes.io/router.entrypoints: web
      # traefik.ingress.kubernetes.io/router.tls: "true"
    labels: {}
  - name: kargo-cloudflare
    host: kargo.homelab.k3s.portefaix.xyz
    # className: nginx
    className: traefik
    annotations:
      external-dns.alpha.kubernetes.io/hostname: kargo.homelab.k3s.portefaix.xyz
      # nginx.ingress.kubernetes.io/auth-url: |-
      #   http://authentik.identity.svc.cluster.local/outpost.goauthentik.io/auth/nginx
      # nginx.ingress.kubernetes.io/auth-signin: |-
      #   http://authentik.homelab.k3s.portefaix.xyz/outpost.goauthentik.io/start?rd=$escaped_request_uri
      # nginx.ingress.kubernetes.io/auth-response-headers: |-
      #   Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
      # nginx.ingress.kubernetes.io/auth-snippet: |
      #   proxy_set_header X-Forwarded-Host $http_host;
    labels:
      external-dns.io/provider: cloudflare

kargo:
  api:
    replicas: 1
    nodeSelector:
      node-role.kubernetes.io/master: "true"
    host: kargo.home.portefaix.xyz
    # TODO: https://github.com/akuity/kargo/pull/792
    resources:
      limits:
        # cpu: 200m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 50Mi
    tls:
      enabled: false
    secret:
      name: kargo-credentials
    adminAccount:
      enabled: true
    oidc:
      enabled: true
      dex:
        enabled: true
        nodeSelector:
          node-role.kubernetes.io/master: "true"
        resources:
          limits:
            # cpu: 200m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
        env:
        - name: DEX_LOG_LEVEL
          value: info
        - name: DEX_LOG_FORMAT
          value: json
        envFrom:
        - secretRef:
            name: kargo-credentials
        connectors:
        - id: github
          name: GitHub
          type: github
          config:
            clientID: "$KARGO_DEX_CLIENT_ID"
            clientSecret: "$KARGO_DEX_CLIENT_SECRET"
            redirectURI: http://kargo.home.portefaix.xyz/dex/callback
            orgs:
            - name: portefaix
        admins:
          groups: portefaix:KargoAdmin
          #     viewers:
          #       groups: <GithubOrg>:KargoViewer
          # argocd:
      urls:
        core: http://argo-cd.home.portefaix.xyz
    ingress:
      enabled: true
      # ingressClassName: nginx
      ingressClassName: traefik
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: web
        # traefik.ingress.kubernetes.io/router.tls: "true"
      tls:
        enabled: false

  controller:
    nodeSelector:
      node-role.kubernetes.io/master: "true"
    resources:
      limits:
        # cpu: 200m
        memory: 500Mi
      requests:
        cpu: 50m
        memory: 250Mi

  managementController:
    resources:
      limits:
        # cpu: 200m
        memory: 500Mi
      requests:
        cpu: 50m
        memory: 250Mi

  webhooksServer:
    nodeSelector:
      node-role.kubernetes.io/master: "true"
    resources:
      limits:
        # cpu: 200m
        memory: 300Mi
      requests:
        cpu: 50m
        memory: 50Mi

  garbageCollector:
    schedule: "0 * * * *"
    resources:
      limits:
        # cpu: 200m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 32Mi
