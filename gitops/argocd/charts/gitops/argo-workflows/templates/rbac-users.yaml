# SPDX-FileCopyrightText: Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    workflows.argoproj.io/rbac-rule: '"portefaix:Admin" in groups'
    workflows.argoproj.io/rbac-rule-precedence: "1"
  labels:
    {{- include "argo-workflows.labels" ( dict "context" (index $.Subcharts "argo-workflows") "component" "workflow" "name" "iam" ) | nindent 4 }}
  name: argo-workflow-admin-user
  namespace: {{ .Release.Namespace }}
secrets:
  - name: argo-workflow-admin-user-token
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: "argo-workflow-admin-user"
  labels:
    {{- include "argo-workflows.labels" ( dict "context" (index $.Subcharts "argo-workflows") "component" "workflow" "name" "iam" ) | nindent 4 }}
  name: argo-workflow-admin-user-token
  namespace: {{ .Release.Namespace }}
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    {{- include "argo-workflows.labels" ( dict "context" (index $.Subcharts "argo-workflows") "component" "workflow" "name" "iam" ) | nindent 4 }}
  name: argo-workflow-admin-user
  namespace: {{ .Release.Namespace }}
rules:
- verbs: [get, watch, list]
  apiGroups: [""]
  resources: [configmaps, events]
- verbs: [get, watch, list, delete]
  apiGroups: [""]
  resources: [pods]
- verbs: [get, list]
  apiGroups: [""]
  resources: [pods/log]
- verbs: [get, create]
  apiGroups: [""]
  resources: [secrets]
  resourceNames: [sso]
- verbs: [get, list, watch]
  apiGroups: [""]
  resources: [serviceaccounts]
- verbs: [create, watch, patch]
  apiGroups: [""]
  resources: [events]
- verbs: [create, get, list, watch, update, patch, delete]
  apiGroups: [argoproj.io]
  resources:
  - cronworkflows
  - eventbus
  - eventsources
  - sensors
  - workfloweventbindings
  - workflows
  - workflowtaskresults
  - workflowtasksets
  - workflowtemplates
  - clusterworkflowtemplates
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    {{- include "argo-workflows.labels" ( dict "context" (index $.Subcharts "argo-workflows") "component" "workflow" "name" "iam" ) | nindent 4 }}
  name: argo-workflow-admin-user
  namespace: {{ .Release.Namespace }}
subjects:
- kind: ServiceAccount
  name: argo-workflow-admin-user
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-workflow-admin-user
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    workflows.argoproj.io/rbac-rule: "true"
    workflows.argoproj.io/rbac-rule-precedence: "0"
  labels:
    {{- include "argo-workflows.labels" ( dict "context" (index $.Subcharts "argo-workflows") "component" "workflow" "name" "iam" ) | nindent 4 }}
  name: argo-workflow-default-user
  namespace: {{ .Release.Namespace }}
secrets:
  - name: argo-workflow-default-user-token
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: "argo-workflow-default-user"
  labels:
    {{- include "argo-workflows.labels" ( dict "context" (index $.Subcharts "argo-workflows") "component" "workflow" "name" "iam" ) | nindent 4 }}
  name: argo-workflow-default-user-token
  namespace: {{ .Release.Namespace }}
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    {{- include "argo-workflows.labels" ( dict "context" (index $.Subcharts "argo-workflows") "component" "workflow" "name" "iam" ) | nindent 4 }}
  name: argo-workflow-default-user
  namespace: {{ .Release.Namespace }}
rules:
- verbs: [get, watch, list]
  apiGroups: [""]
  resources: [configmaps, events]
- verbs: [get, watch, list, delete]
  apiGroups: [""]
  resources: [pods]
- verbs: [get, list]
  apiGroups: [""]
  resources: [pods/log]
- verbs: [get, create]
  apiGroups: [""]
  resources: [secrets]
  resourceNames: [sso]
- verbs: [get, list, watch]
  apiGroups: [""]
  resources: [serviceaccounts]
- verbs: [create, watch, patch]
  apiGroups: [""]
  resources: [events]
- verbs: [get, list, watch]
  apiGroups: [argoproj.io]
  resources:
  - cronworkflows
  - eventbus
  - eventsources
  - sensors
  - workfloweventbindings
  - workflows
  - workflowtaskresults
  - workflowtasksets
  - workflowtemplates
  - clusterworkflowtemplates
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    {{- include "argo-workflows.labels" ( dict "context" (index $.Subcharts "argo-workflows") "component" "workflow" "name" "iam" ) | nindent 4 }}
  name: argo-workflow-default-user
  namespace: {{ .Release.Namespace }}
subjects:
- kind: ServiceAccount
  name: argo-workflow-default-user
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-workflow-default-user
