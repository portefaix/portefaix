# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
operator:
  operator:
    replicaCount: 1

    resources:
      limits:
        # cpu: 400m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 256Mi
        ephemeral-storage: 100Mi
  console:
    resources:
      limits:
        # cpu: 200m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 64Mi
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        # nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.identity.svc.cluster.local/oauth2/auth"
        # nginx.ingress.kubernetes.io/auth-signin: "http://auth.192.168.0.208.nip.io/oauth2/sign_in?rd=http://$host$request_uri"
        # nginx.ingress.kubernetes.io/configuration-snippet: |
        #   proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
        #   grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
      host: minio-cluster.192.168.0.208.nip.io
      path: /
      pathType: Prefix

tenant:
  tenants:
    - name: portefaix
      namespace: storage
      pools:
        - servers: 1
          name: pool-0
          volumesPerServer: 4
          size: 1Gi
          storageClassName: nfs-client
          # tolerations: {}
          # nodeSelector: {}
          # affinity: {}
          resources:
            limits:
              # cpu: 200m
              memory: 200Mi
            requests:
              cpu: 30m
              memory: 50Mi
      mountPath: /export
      subPath: /data
      secrets:
        enabled: true
        name: minio1-secret
        accessKey: minioadmin
        secretKey: miniopwd
      # pool metrics to be read by Prometheus
      metrics:
        enabled: true
        port: 9000
      certificate:
        externalCertSecret: {}
        requestAutoCert: true
        certConfig: {}
      s3:
        bucketDNS: false
      buckets: []
      podManagementPolicy: Parallel
      serviceMetadata: {}
      priorityClassName : ""
