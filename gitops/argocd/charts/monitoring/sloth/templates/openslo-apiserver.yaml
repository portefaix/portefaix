# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: openslo/v1alpha
kind: SLO
metadata:
  name: openslo-apiserver-requests-availability
  displayName: APIServer Requests Availability
  namespace: {{- .Release.Namespace -}}
  labels:
    {{- include "sloth.labels" . | nindent 4 }}
    monitoring: portefaix
spec:
  service: k8s-apiserver
  description: "Apiserver are returning correctly the requests to the clients (kubectl users, controllers...)."
  budgetingMethod: Occurrences
  objectives:
    - ratioMetrics:
        good:
          source: prometheus
          queryType: promql
          query: sum(rate(apiserver_request_total{code!~"(5..|429)"}[{{.window}}]))
        total:
          source: prometheus
          queryType: promql
          query: sum(rate(apiserver_request_total[{{.window}}]))
      target: 0.999
  timeWindows:
    - count: 30
      unit: Day
---
apiVersion: openslo/v1alpha
kind: SLO
metadata:
  name: openslo-apiserver-requests-latency
  namespace: {{- .Release.Namespace -}}
  displayName: APIServer Requests Latency
  labels:
    {{- include "sloth.labels" . | nindent 4 }}
    monitoring: portefaix
spec:
  service: k8s-apiserver
  description: "Apiserver responses are being fast enough and this will affect the clients (kubectl users, controllers...)."
  budgetingMethod: Occurrences
  objectives:
    - ratioMetrics:
        good:
          source: prometheus
          queryType: promql
          query: sum(rate(apiserver_request_duration_seconds_bucket{le="0.4",verb!="WATCH"}[{{.window}}]))
        total:
          source: prometheus
          queryType: promql
          query: sum(rate(apiserver_request_duration_seconds_count{verb!="WATCH"}[{{.window}}]))
      target: 0.99
    - ratioMetrics:
        good:
          source: prometheus
          queryType: promql
          query: sum(rate(apiserver_request_duration_seconds_bucket{le="5",verb!="WATCH"}[{{.window}}]))
        total:
          source: prometheus
          queryType: promql
          query: sum(rate(apiserver_request_duration_seconds_count{verb!="WATCH"}[{{.window}}]))
      target: 0.999
  timeWindows:
    - count: 30
      unit: Day
