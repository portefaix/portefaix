---
# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

k3s:
  enabled: false

ingress:
  enabled: false

grafanaDashboard:
  enabled: true
  grafanaOperator:
    enabled: true
    matchLabels:
      grafana.com/dashboards: portefaix
    folder: monitoring
    dashboards: []
    # - name:
    #   key:

cilium:
  enabled: false

# grafana:
#   # Grafana folder in which to store the dashboards
#   folder: compute

monitoring:
  runbookUrl: "https://runbooks.prometheus-operator.dev/runbooks"

kube-prometheus-stack:
  commonLabels:
    portefaix.xyz/version: v0.54.0

  crds:
    enabled: false

  defaultRules:
    create: true
    labels:
      monitoring: portefaix
    additionalRuleLabels:
      monitoring: portefaix
    # TODO: use https://runbooks.portefaix.xyz
    runbookUrl: "https://runbooks.prometheus-operator.dev/runbooks"
    disabled:
      InfoInhibitor: true

  alertmanager:
    enabled: true
    annotations:
      a8r.io/description: Default Prometheus rules
      a8r.io/owner: prometheus-community
      a8r.io/bugs: https://github.com/prometheus-community/helm-charts/issues
      a8r.io/documentation: https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack
      a8r.io/repository: https://github.com/prometheus-community/helm-charts
      a8r.io/support: https://github.com/prometheus-community/helm-charts/issues
    serviceAccount:
      create: true
      name: alertmanager
    tplConfig: false
    ingress:
      enabled: false
    serviceMonitor:
      selfMonitor: true
      additionalLabels:
        monitoring: portefaix

    alertmanagerSpec:
      # useExistingSecret: true
      # configSecret: alertmanager-config
      alertmanagerConfiguration:
        name: core
      logFormat: json
      logLevel: debug
      # secrets:
      # - alertmanager-credentials

  grafana:
    enabled: false
    forceDeployDashboards: true
    Other options are: utc, browser or a specific timezone, i.e. Europe/Paris
    defaultDashboardsTimezone: Europe/Paris
    sidecar:
      dashboards:
        enabled: true
        label: grafana-dashboard
        labelValue: kube-prometheus-stack
        annotations:
          grafana-folder: kubernetes

  kubeApiServer:
    enabled: true
    serviceMonitor:
      additionalLabels:
        monitoring: portefaix

  kubelet:
    enabled: true
    serviceMonitor:
      additionalLabels:
        monitoring: portefaix
      cAdvisorMetricRelabelings:
      # From KPS chart
      # Drop less useful container CPU metrics.
      - sourceLabels: [__name__]
        action: drop
        regex: 'container_cpu_(cfs_throttled_seconds_total|load_average_10s|system_seconds_total|user_seconds_total)'
      # Drop less useful container / always zero filesystem metrics.
      - sourceLabels: [__name__]
        action: drop
        regex: 'container_fs_(io_current|io_time_seconds_total|io_time_weighted_seconds_total|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)'
      # Drop less useful / always zero container memory metrics.
      - sourceLabels: [__name__]
        action: drop
        regex: 'container_memory_(mapped_file|swap)'
      # Drop less useful container process metrics.
      - sourceLabels: [__name__]
        action: drop
        regex: 'container_(file_descriptors|tasks_state|threads_max)'
      # Drop container spec metrics that overlap with kube-state-metrics.
      - sourceLabels: [__name__]
        action: drop
        regex: 'container_spec.*'
      # Drop cgroup metrics with no pod.
      - sourceLabels: [id, pod]
        action: drop
        regex: '.+;'
      # End from KPS chart

      # See https://github.com/grafana/k8s-monitoring-helm/pull/326
      - sourceLabels: ["__name__", "image"]
        separator: "@"
        regex: "(container_cpu_.*|container_fs_.*|container_memory_.*|container_network_.*)@"
        action: drop
      - sourceLabels: ["__name__", "container"]
        separator: "@"
        regex: "(container_cpu_.*|container_fs_.*|container_memory_.*)@"
        action: drop

      # drop all of these labels, but no more dropping than just giving them all a common value, so that expressions such as image!="" still work
      - sourceLabels: [__name__]
        regex: "container_cpu_.*|container_fs_.*|container_memory_.*|container_network_.*"
        targetLabel: "id"
        replacement: "NA"
      - sourceLabels: [__name__]
        regex: "container_cpu_.*|container_fs_.*|container_memory_.*|container_network_.*"
        targetLabel: "image"
        replacement: "NA"
      - sourceLabels: [__name__]
        regex: "machine_memory_bytes"
        targetLabel: "boot_id"
        replacement: "NA"
      - sourceLabels: [__name__]
        regex: "machine_memory_bytes"
        targetLabel: "system_uuid"
        replacement: "NA"

      # filter all storage devices that isnt physical, this is a 2 stage rule, first whitelist the ones we cant to keep then drop the specific ones that was not whitelisted
      # notice we also drop the dm-, since cadvisor double-reports both the dm and the mapped device, so if sda is e.g. dm-0, then you get value for both
      - sourceLabels: ["__name__", "device"]
        separator: "@"
        regex: "container_fs_.*@(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dasd.+)"
        targetLabel: "__keepme"
        replacement: "1"
      - sourceLabels: ["__name__", "__keepme"]
        separator: "@"
        regex: "container_fs_.*@"
        action: drop
      - sourceLabels: ["__name__"]
        regex: "container_fs_.*"
        targetLabel: "__keepme"
        replacement: ""

      # filter all network devices that isnt physical, this is a 2 stage rule, first whitelist the ones we cant to keep then drop the specific ones that was not whitelisted
      - sourceLabels: ["__name__", "interface"]
        separator: "@"
        regex: "container_network_.*@(en[ospx]|wlan|eth)[0-9].*"
        targetLabel: "__keepme"
        replacement: "1"
      - sourceLabels: ["__name__", "__keepme"]
        separator: "@"
        regex: "container_network_.*@"
        action: drop
      - sourceLabels: ["__name__"]
        regex: "container_network_.*"
        targetLabel: "__keepme"
        replacement: ""

  kubeControllerManager:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        monitoring: portefaix

  coreDns:
    enabled: true
    serviceMonitor:
      additionalLabels:
        monitoring: portefaix

  kubeDns:
    enabled: false
    serviceMonitor:
      additionalLabels:
        monitoring: portefaix

  kubeEtcd:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        monitoring: portefaix

  kubeScheduler:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        monitoring: portefaix

  kubeProxy:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        monitoring: portefaix

  kubeStateMetrics:
    enabled: true

  kube-state-metrics:
    prometheus:
      monitor:
        enabled: true
        additionalLabels:
          monitoring: portefaix

  nodeExporter:
    enabled: true

  prometheus-node-exporter:
    extraArgs:
    # Disable unused collectors
    - --no-collector.arp
    - --no-collector.ipvs
    - --no-collector.sockstat
    - --no-collector.softnet
    # Excludes from kube-prometheus-stack
    - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
    - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
    prometheus:
      monitor:
        enabled: true
        additionalLabels:
          monitoring: portefaix
        # See https://github.com/grafana/k8s-monitoring-helm/pull/326
        metricRelabelings:
        - sourceLabels: ["__name__", "fstype"]
          separator: "@"
          regex: "node_filesystem.*@tmpfs"
          action: drop
        - sourceLabels: ["__name__", "mountpoint"]
          separator: "@"
          regex: "node_filesystem.*@/"
          targetLabel: "__keepme"
          action: drop
        - sourceLabels: ["__name__", "__keepme"]
          separator: "@"
          regex: "node_filesystem.*@"
          action: drop
        - sourceLabels: ["__name__"]
          regex: "node_filesystem.*@"
          targetLabel: "__keepme"
          replacement: ""

  prometheusOperator:
    enabled: true
    tls:
      enabled: false
    admissionWebhooks:
      enabled: false

    serviceAccount:
      create: true
      name: prometheus-operator
    serviceMonitor:
      selfMonitor: rue
      additionalLabels:
        monitoring: portefaix
    logFormat: json
    logLevel: info

  prometheus:
    enabled: true
    annotations:
      a8r.io/description: Default Prometheus rules
      a8r.io/owner: prometheus-community
      a8r.io/bugs: https://github.com/prometheus-community/helm-charts/issues
      a8r.io/documentation: https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack
      a8r.io/repository: https://github.com/prometheus-community/helm-charts
      a8r.io/support: https://github.com/prometheus-community/helm-charts/issues
    serviceAccount:
      create: true
      name: prometheus
    ingress:
      enabled: false
    serviceMonitor:
      selfMonitor: true
      additionalLabels:
        monitoring: portefaix
    prometheusSpec:
      enableAdminAPI: true
      enableRemoteWriteReceiver: true
      enableFeatures:
      - remote-write-receiver
      scrapeInterval: 30s
      evaluationInterval: 30s
      ruleNamespaceSelector: {}
      ruleSelector:
        matchLabels:
          monitoring: portefaix
          # observability: portefaix
      serviceMonitorSelector:
        matchLabels:
          monitoring: portefaix
          # observability: portefaix
      serviceMonitorNamespaceSelector: {}
      podMonitorSelector:
        matchLabels:
          monitoring: portefaix
          # observability: portefaix
      podMonitorNamespaceSelector: {}
      probeSelector:
        matchLabels:
          monitoring: portefaix
          # observability: portefaix
      probeNamespaceSelector: {}
      retention: 3d
      logLevel: info
      logFormat: json
      additionalScrapeConfigs: []

kubernetes-mixin:
  additionalLabels:
    portefaix.xyz/version: v0.54.0
    monitoring: portefaix
  additionalAnnotations: {}
  monitor:
    additionalLabels:
      monitoring: portefaix
  grafana:
    folder: kubernetes

prometheus-mixin:
  additionalLabels:
    portefaix.xyz/version: v0.54.0
    monitoring: portefaix
  additionalAnnotations: {}
  monitor:
    additionalLabels:
      monitoring: portefaix
  grafana:
    folder: monitoring

prometheus-operator-mixin:
  additionalLabels:
    portefaix.xyz/version: v0.54.0

  monitor:
    additionalLabels:
      monitoring: portefaix
  grafana:
    folder: monitoring

node-exporter-mixin:
  additionalLabels:
    portefaix.xyz/version: v0.54.0

  additionalAnnotations: {}
  monitor:
    additionalLabels:
      monitoring: portefaix
  grafana:
    folder: monitoring

kube-state-metrics-mixin:
  additionalLabels:
    portefaix.xyz/version: v0.54.0

  additionalAnnotations: {}
  monitor:
    additionalLabels:
      monitoring: portefaix
  grafana:
    folder: kubernetes

alertmanager-mixin:
  additionalLabels:
    portefaix.xyz/version: v0.54.0

  additionalAnnotations: {}
  monitor:
    additionalLabels:
      monitoring: portefaix
  grafana:
    folder: kubernetes

coredns-mixin:
  additionalLabels:
    portefaix.xyz/version: v0.54.0

  additionalAnnotations: {}
  monitor:
    additionalLabels:
      monitoring: portefaix
  grafana:
    folder: kubernetes

blackboxExporter:
  endpoint: blackbox-exporter-prometheus-blackbox-exporter.monitoring:9115
  probes:
    portefaix: []
    tailscale: []
