# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
monitoring:
  runbookUrl: "https://runbooks.prometheus-operator.dev/runbooks"

kube-prometheus-stack:
  commonLabels:
    portefaix.xyz/version: v0.34.0
    # TODO: prefer additionalLabels for ServiceMonitor
    monitoring: portefaix

  defaultRules:
    # See https://artifacthub.io/packages/search?ts_query_web=mixin&sort=relevance&page=1
    create: false
    runbookUrl: "https://runbooks.prometheus-operator.dev/runbooks"

  alertmanager:
    enabled: true
    annotations:
      a8r.io/description: Default Prometheus rules
      a8r.io/owner: prometheus-community
      a8r.io/bugs: https://github.com/prometheus-community/helm-charts/issues
      a8r.io/documentation: https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack
      a8r.io/repository: https://github.com/prometheus-community/helm-charts
      a8r.io/support: https://github.com/prometheus-community/helm-charts/issues
    serviceAccount:
      create: true
      name: alertmanager
    tplConfig: false
    ingress:
      enabled: false
    serviceMonitor:
      selfMonitor: true
    alertmanagerSpec:
      useExistingSecret: true
      configSecret: alertmanager-config
      logFormat: json
      logLevel: debug

  grafana:
    enabled: false

  kubeApiServer:
    enabled: true

  kubelet:
    enabled: true

  kubeControllerManager:
    enabled: true

  coreDns:
    enabled: true

  kubeDns:
    enabled: false

  kubeEtcd:
    enabled: true

  kubeProxy:
    enabled: true

  kubeScheduler:
    enabled: true

  kubeStateMetrics:
    enabled: true

  kube-state-metrics:
    prometheus:
      monitor:
        enabled: true
        additionalLabels:
          monitoring: portefaix

  nodeExporter:
    enabled: true

  prometheus-node-exporter:
    prometheus:
      monitor:
        enabled: true
        additionalLabels:
          monitoring: portefaix
    podLabels:
      portefaix.xyz/version: v0.34.0

  prometheusOperator:
    enabled: true
    tls:
      enabled: false
    admissionWebhooks:
      enabled: false

    serviceAccount:
      create: true
      name: prometheus-operator
    serviceMonitor:
      selfMonitor: true

    serviceLabels:
      portefaix.xyz/version: v0.34.0
    podLabels:
      portefaix.xyz/version: v0.34.0

  prometheus:
    enabled: true
    annotations:
      a8r.io/description: Default Prometheus rules
      a8r.io/owner: prometheus-community
      a8r.io/bugs: https://github.com/prometheus-community/helm-charts/issues
      a8r.io/documentation: https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack
      a8r.io/repository: https://github.com/prometheus-community/helm-charts
      a8r.io/support: https://github.com/prometheus-community/helm-charts/issues
    serviceAccount:
      create: true
      name: prometheus
    thanosService:
      enabled: true
    thanosServiceMonitor:
      enabled: true
    thanosIngress:
      enabled: false
    ingress:
      enabled: false
    serviceMonitor:
      selfMonitor: true
    prometheusSpec:
      enableAdminAPI: true
      ruleNamespaceSelector: {}
      ruleSelector:
        matchLabels:
          monitoring: portefaix
      serviceMonitorSelector:
        matchLabels:
          monitoring: portefaix
      serviceMonitorNamespaceSelector: {}
      podMonitorSelector:
        matchLabels:
          monitoring: portefaix
      podMonitorNamespaceSelector: {}
      probeSelector:
        matchLabels:
          monitoring: portefaix
      probeNamespaceSelector: {}
      retention: 7d
      logLevel: info
      logFormat: json
      additionalScrapeConfigs: []
    additionalServiceMonitors:
      - name: argocd-metrics
        selector:
          matchLabels:
            app.kubernetes.io/name: argocd-metrics
        namespaceSelector:
          matchNames: ["argocd"]
        endpoints:
          - port: metrics
        additionalLabels:
          monitoring: portefaix
      - name: argocd-server-metrics
        selector:
          matchLabels:
            app.kubernetes.io/name: argocd-server-metrics
        namespaceSelector:
          matchNames: ["argocd"]
        endpoints:
          - port: metrics
        additionalLabels:
          monitoring: portefaix
      - name: argocd-repo-server-metrics
        selector:
          matchLabels:
            app.kubernetes.io/name: argocd-repo-server-metrics
        namespaceSelector:
          matchNames: ["argocd"]
        endpoints:
          - port: metrics
        additionalLabels:
          monitoring: portefaix
    additionalPodMonitors: []
