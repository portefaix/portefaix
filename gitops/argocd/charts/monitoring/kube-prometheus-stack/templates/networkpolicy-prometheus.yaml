
# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

{{- if .Values.cilium.enabled -}}
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: prometheus
  labels:
    {{- include "kps.labels" $ | indent 4 }}
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/instance: kube-prometheus-stack-prometheus
      app.kubernetes.io/name: prometheus
  ingress:
    - fromEndpoints:
        - matchLabels:
            app.kubernetes.io/name: grafana
            io.kubernetes.pod.namespace: monitoring
      toPorts:
        - ports:
            - port: "9090"
              protocol: TCP
  egress:
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: kube-system
            k8s-app: kube-dns
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"
    - toEntities:
        - host
      toPorts:
        - ports:
            - port: "6443"  # kube-api
            - port: "9100"  # prometheus node exporter
            - port: "10250" # kubelet
            - port: "10257" # kube-controller-manager
            - port: "10259" # kube-scheduler
    - toServices:
        - k8sServiceSelector:
            selector:
              matchLabels:
                k8s-app: kube-dns
            namespace: monitoring
      toPorts:
        - ports:
            - port: "9153"
              protocol: TCP
    - toServices:
        - k8sService:
            serviceName: kube-prometheus-stack-alertmanager
            namespace: monitoring
      toPorts:
        - ports:
            - port: "9093"
              protocol: TCP
    - toServices:
        - k8sService:
            serviceName: kube-prometheus-stack-kube-state-metrics
            namespace: monitoring
      toPorts:
        - ports:
            - port: "8080"
              protocol: TCP
    - toServices:
        - k8sService:
            serviceName: kube-prometheus-stack-operator
            namespace: monitoring
      toPorts:
        - ports:
            - port: "10250" # kubelet
              protocol: TCP
    - toServices:
        - k8sService:
            serviceName: kube-prometheus-stack-grafana
            namespace: monitoring
      toPorts:
        - ports:
            - port: "3000"
              protocol: TCP
{{- end }}
