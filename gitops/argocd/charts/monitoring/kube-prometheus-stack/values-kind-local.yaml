# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
kube-prometheus-stack:
  alertmanager:
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      hosts:
        - alertmanager.127.0.0.1.nip.io
      path: /
      pathType: Prefix
    alertmanagerSpec:
      externalUrl: https://alertmanager.127.0.0.1.nip.io
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: standard
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 50Mi
      resources:
        limits:
          # cpu: 200m
          memory: 128Mi
        requests:
          cpu: 30m
          memory: 32Mi

  prometheus-node-exporter:
    resources:
      limits:
        # cpu: 200m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi

  prometheusOperator:
    resources:
      limits:
        # cpu: 300m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 96Mi
    prometheusConfigReloader:
      resources:
        limits:
          # cpu: 100m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 50Mi

  prometheus:
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      hosts:
        - prometheus.127.0.0.1.nip.io
      path: /
    prometheusSpec:
      externalUrl: https://prometheus.127.0.0.1.nip.io
      resources:
        limits:
          # cpu: 600m
          memory: 4000Mi
        requests:
          cpu: 200m
          memory: 1000Mi
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: standard
            resources:
              requests:
                storage: 200Mi
