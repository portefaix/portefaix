# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
k3s:
  enabled: true

cilium:
  enabled: false

ingress:
  enabled: true
  alertmanager:
    name: alertmanager.homelab.portefaix.xyz
    className: nginx
  prometheus:
    name: prometheus.homelab.portefaix.xyz
    className: nginx

kube-prometheus-stack:
  defaultRules:
    additionalRuleLabels:
      cluster: portefaix-k3s-homelab

  alertmanager:
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.identity.svc.cluster.local/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "http://auth.192.168.0.62.nip.io/oauth2/sign_in?rd=http://$host$request_uri"
      hosts:
      - alertmanager.192.168.0.62.nip.io
      path: /
      pathType: Prefix
    alertmanagerSpec:
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: nfs-client
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 50Mi
      resources:
        limits:
          # cpu: 150m
          memory: 128Mi
        requests:
          cpu: 30m
          memory: 32Mi
      nodeSelector:
        portefaix.xyz/infra: "core"

  kube-state-metrics:
    prometheus:
      monitor:
        relabelings:
        - action: replace
          replacement: portefaix-k3s-homelab
          targetLabel: cluster
        - targetLabel: "instance"
          sourceLabels:
          - "__meta_kubernetes_pod_node_name"
    resources:
      limits:
        # cpu: 200m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi

  prometheus-node-exporter:
    prometheus:
      monitor:
        relabelings:
        - action: replace
          replacement: portefaix-k3s-homelab
          targetLabel: cluster
        - targetLabel: "instance"
          sourceLabels:
          - "__meta_kubernetes_pod_node_name"
    resources:
      limits:
        # cpu: 150m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi

  prometheusOperator:
    resources:
      limits:
        # cpu: 200m
        memory: 256Mi
      requests:
        cpu: 200m
        memory: 96Mi
    prometheusConfigReloader:
      resources:
        limits:
          # cpu: 50m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 50Mi
    nodeSelector:
      portefaix.xyz/infra: "core"

  prometheus:
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.identity.svc.cluster.local/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "http://auth.192.168.0.62.nip.io/oauth2/sign_in?rd=http://$host$request_uri"
      hosts:
      - prometheus.192.168.0.62.nip.io
      path: /
      pathType: Prefix
    prometheusSpec:
      # externalUrl: https://prometheus.aws.portefaix.xyz
      image:
        tag: v2.42.0
      retention: 12h
      resources:
        limits:
          # cpu: 800m
          memory: 4Gi
        requests:
          cpu: 2000m
          memory: 2Gi
      nodeSelector:
        portefaix.xyz/infra: "core"

      additionalScrapeConfigs:
      - job_name: blackbox
        metrics_path: /probe
        params:
          module: [http_2xx]
        static_configs:
        - targets:
          # External
          # - https://cloud.lamirault.xyz
          # - https://portefaix.xyz
          # - https://charts.portefaix.xyz
          # Internal
          - http://alertmanager-operated.monitoring:9093
          - http://grafana.monitoring:80
          - http://prometheus-operated.monitoring:9090
          - http://argo-cd-argocd-server.argocd:80
          - http://minio-console.storage:9001
          - http://chaos-dashboard.chaos-mesh:2333
          - http://kyverno-reporter-ui.kyverno:8080
        relabel_configs:
        - source_labels: [__address__]
          target_label: __param_target
        - source_labels: [__param_target]
          # Important!
          target_label: target
          # Ensure blackbox-exporter is reachable from Prometheus
        - target_label: __address__
          replacement: blackbox-exporter-prometheus-blackbox-exporter.monitoring:9115
      #   - job_name: "Tailscale hosts"
      #     static_configs:
      #       - targets:
      #           - "192.168.0.62:8787"
      #           - "192.168.1.4:8787"
      #           - "192.168.1.123:8787"
      #           - "192.168.1.30:8787"

      # remoteWrite:
      # - url: http://mimir-nginx.monitoring.svc.cluster.local:80/api/v1/push

      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: nfs-client
            resources:
              requests:
                storage: 200Mi

    monitor:
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

  kubelet:
    serviceMonitor:
      cAdvisorRelabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster
      - targetLabel: metrics_path
        sourceLabels:
        - "__metrics_path__"
      - targetLabel: "instance"
        sourceLabels:
        - "node"

  kubeApiServer:
    serviceMonitor:
      metricRelabelings:
      # Remove high cardinality metrics
      - sourceLabels: ["__name__"]
        regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
        action: drop
      - sourceLabels: ["__name__"]
        regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
        action: drop

  kubeControllerManager:
    endpoints:
    - 192.168.0.62
    service:
      enabled: true
      port: 10257
      targetPort: 10257
    serviceMonitor:
      https: true
      insecureSkipVerify: true

  kubeEtcd:
    enabled: false
    # endpoints:
    # - 192.168.0.62
    # service:
    #   enabled: true
    #   port: 2381
    #   targetPort: 2381

  kubeScheduler:
    endpoints:
    - 192.168.0.62
    service:
      enabled: true
      port: 10259
      targetPort: 10259
    serviceMonitor:
      https: true
      insecureSkipVerify: true

  kubeProxy:
    endpoints:
    - 192.168.0.62
    service:
      enabled: true
      port: 10249
      targetPort: 10249
      selector:
        k8s-app: kube-proxy
