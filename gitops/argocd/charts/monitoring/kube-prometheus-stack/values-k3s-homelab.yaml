---
# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

k3s:
  enabled: false
  addresses:
  - ip: 192.168.0.62 # portefaix
  - ip: 192.168.0.208 # portefaix-1
  - ip: 192.168.0.116 # portefaix-2
  - ip: 192.168.0.233 # portefaix-6
  - ip: 192.168.0.250 # portefaix-7

cilium:
  enabled: false

ingress:
  enabled: true
  entries:
  - name: alertmanager-external
    host: alertmanager.home.portefaix.xyz
    service: alertmanager
    port: 9093
    className: nginx
    annotations:
      hajimari.io/enable: "true"
      hajimari.io/icon: "logos:prometheus"
      hajimari.io/appName: "Alertmanager"
      hajimari.io/group: "Observability"
    labels: {}
  - name: alertmanager-cloudflare
    host: alertmanager.homelab.k3s.portefaix.xyz
    service: alertmanager
    port: 9093
    className: nginx
    annotations:
      external-dns.alpha.kubernetes.io/hostname: alertmanager.homelab.k3s.portefaix.xyz
      nginx.ingress.kubernetes.io/auth-url: |-
        http://authentik.identity.svc.cluster.local/outpost.goauthentik.io/auth/nginx
      nginx.ingress.kubernetes.io/auth-signin: |-
        http://authentik.homelab.k3s.portefaix.xyz/outpost.goauthentik.io/start?rd=$escaped_request_uri
      nginx.ingress.kubernetes.io/auth-response-headers: |-
        Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;
    labels:
      external-dns.io/provider: cloudflare
  - name: prometheus-external
    host: prometheus.home.portefaix.xyz
    service: prometheus
    port: 9090
    className: nginx
    annotations:
      hajimari.io/enable: "true"
      hajimari.io/icon: "logos:prometheus"
      hajimari.io/appName: "Prometheus"
      hajimari.io/group: "Observability"
    labels: {}
  - name: prometheus-cloudflare
    host: prometheus.homelab.k3s.portefaix.xyz
    service: prometheus
    port: 9090
    className: nginx
    annotations:
      external-dns.alpha.kubernetes.io/hostname: prometheus.homelab.k3s.portefaix.xyz
      nginx.ingress.kubernetes.io/auth-url: |-
        http://authentik.identity.svc.cluster.local/outpost.goauthentik.io/auth/nginx
      nginx.ingress.kubernetes.io/auth-signin: |-
        http://authentik.homelab.k3s.portefaix.xyz/outpost.goauthentik.io/start?rd=$escaped_request_uri
      nginx.ingress.kubernetes.io/auth-response-headers: |-
        Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;
    labels:
      external-dns.io/provider: cloudflare

kube-prometheus-stack:
  defaultRules:
    # rules:
    #   etcd: false
    #   k8s: false
    #   kubeApiserverAvailability: false
    #   kubeApiserverBurnrate: false
    #   kubeApiserverHistogram: false
    #   kubeApiserverSlos: false
    #   kubeControllerManager: false
    #   kubelet: false
    #   kubeProxy: true
    #   kubernetesApps: false
    #   kubernetesResources: false
    #   kubernetesStorage: false
    #   kubernetesSystem: true
    #   kubeScheduler: false
    additionalRuleLabels:
      cluster: portefaix-k3s-homelab

  alertmanager:
    ingress:
      enabled: true
      ingressClassName: nginx
      hosts:
      - alertmanager.192.168.0.62.nip.io
      path: /
      pathType: Prefix
    alertmanagerSpec:
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: nfs-client
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 50Mi
      resources:
        limits:
          # cpu: 150m
          memory: 128Mi
        requests:
          cpu: 30m
          memory: 32Mi
      nodeSelector:
        portefaix.xyz/infra: "core"
    serviceMonitor:
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

  kubeApiServer:
    serviceMonitor:
      relabelings:
      # Remove high cardinality metrics
      - sourceLabels: ["__name__"]
        regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
        action: drop
      - sourceLabels: ["__name__"]
        regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
        action: drop
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

  kubelet:
    serviceMonitor:
      cAdvisorRelabelings:
      - action: replace
        sourceLabels: [__metrics_path__]
        targetLabel: metrics_path
      - targetLabel: instance
        sourceLabels:
        - "node"
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster
      relabelings:
      - action: replace
        sourceLabels: [__metrics_path__]
        targetLabel: metrics_path
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

  kubeControllerManager:
    endpoints:
    - 192.168.0.62
    service:
      enabled: true
      port: 10257
      targetPort: 10257
    serviceMonitor:
      https: true
      insecureSkipVerify: true
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

  kubeEtcd:
    endpoints:
    - 192.168.0.62
    service:
      enabled: true
      port: 2381
      targetPort: 2381
    serviceMonitor:
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

  kubeScheduler:
    endpoints:
    - 192.168.0.62
    service:
      enabled: true
      port: 10259
      targetPort: 10259
    serviceMonitor:
      https: true
      insecureSkipVerify: true
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

  kubeProxy:
    endpoints:
    - 192.168.0.62
    service:
      enabled: true
      port: 10249
      targetPort: 10249
      selector:
        k8s-app: kube-proxy
    serviceMonitor:
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

  coreDns:
    serviceMonitor:
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

  kubeDns:
    serviceMonitor:
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

  kube-state-metrics:
    prometheus:
      monitor:
        relabelings:
        - action: replace
          replacement: portefaix-k3s-homelab
          targetLabel: cluster
        - targetLabel: "instance"
          sourceLabels:
          - "__meta_kubernetes_pod_node_name"
    resources:
      limits:
        # cpu: 200m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi

  prometheus-node-exporter:
    prometheus:
      monitor:
        relabelings:
        - action: replace
          replacement: portefaix-k3s-homelab
          targetLabel: cluster
        - targetLabel: "instance"
          sourceLabels:
          - "__meta_kubernetes_pod_node_name"
    resources:
      limits:
        # cpu: 150m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 25Mi

  prometheusOperator:
    resources:
      limits:
        # cpu: 200m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 100Mi
    prometheusConfigReloader:
      resources:
        limits:
          # cpu: 50m
          memory: 100Mi
        requests:
          cpu: 5m
          memory: 30Mi
    nodeSelector:
      portefaix.xyz/infra: "core"
    serviceMonitor:
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

  prometheus:
    ingress:
      enabled: true
      ingressClassName: nginx
      hosts:
      - prometheus.192.168.0.62.nip.io
      path: /
      pathType: Prefix

    serviceMonitor:
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

    prometheusSpec:
      # externalUrl: https://prometheus.aws.portefaix.xyz
      image:
        tag: v2.42.0
      retention: 12h
      resources:
        limits:
          # cpu: 800m
          memory: 4Gi
        requests:
          cpu: 1000m
          memory: 2Gi
      nodeSelector:
        portefaix.xyz/infra: core
        kubernetes.io/arch: amd64

      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: nfs-client
            resources:
              requests:
                storage: 200Mi

blackboxExporter:
  endpoint: blackbox-exporter-prometheus-blackbox-exporter.monitoring:9115
  probes:
    portefaix:
    # External
    - https://portefaix.xyz
    - https://nicolas.lamirault.xyz
    # Internal
    # - http://argo-cd-argocd-server.gitops.svc.cluster.local:80
    # - http://grafana.monitoring.svc.cluster.local:80
    # - http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
    # - http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
    tailscale:
    - "192.168.0.62:8787"
    - "192.168.0.208:8787"
    - "192.168.0.116:8787"
    - "192.168.0.233:8787"
    - "100.66.168.143:8787"
