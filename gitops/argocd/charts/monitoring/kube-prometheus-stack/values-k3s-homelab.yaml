# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
k3s:
  enabled: false
  addresses:
  - ip: 192.168.0.62    # portefaix
  - ip: 192.168.0.208   # portefaix-1
  - ip: 192.168.0.116   # portefaix-2
  - ip: 192.168.0.233   # portefaix-6
  - ip: 192.168.0.250   # portefaix-7

cilium:
  enabled: false

ingress:
  enabled: true
  entries:
  - name: alertmanager-external
    host: alertmanager.home.portefaix.xyz
    service: alertmanager
    port: 9093
    className: nginx
    annotations:
      hajimari.io/enable: "true"
      hajimari.io/icon: "logos:prometheus"
      hajimari.io/appName: "Alertmanager"
      hajimari.io/group: "Observability"
    labels: {}
  - name: alertmanager-cloudflare
    host: alertmanager.homelab.k3s.portefaix.xyz
    service: alertmanager
    port: 9093
    className: nginx
    annotations:
      external-dns.alpha.kubernetes.io/hostname: alertmanager.homelab.k3s.portefaix.xyz
      nginx.ingress.kubernetes.io/auth-url: |-
        http://authentik.identity.svc.cluster.local/outpost.goauthentik.io/auth/nginx
      nginx.ingress.kubernetes.io/auth-signin: |-
        http://authentik.homelab.k3s.portefaix.xyz/outpost.goauthentik.io/start?rd=$escaped_request_uri
      nginx.ingress.kubernetes.io/auth-response-headers: |-
        Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;
    labels:
      external-dns.io/provider: cloudflare
  - name: prometheus-external
    host: prometheus.home.portefaix.xyz
    service: prometheus
    port: 9090
    className: nginx
    annotations:
      hajimari.io/enable: "true"
      hajimari.io/icon: "logos:prometheus"
      hajimari.io/appName: "Prometheus"
      hajimari.io/group: "Observability"
    labels: {}
  - name: prometheus-cloudflare
    host: prometheus.homelab.k3s.portefaix.xyz
    service: prometheus
    port: 9090
    className: nginx
    annotations:
      external-dns.alpha.kubernetes.io/hostname: prometheus.homelab.k3s.portefaix.xyz
      nginx.ingress.kubernetes.io/auth-url: |-
        http://authentik.identity.svc.cluster.local/outpost.goauthentik.io/auth/nginx
      nginx.ingress.kubernetes.io/auth-signin: |-
        http://authentik.homelab.k3s.portefaix.xyz/outpost.goauthentik.io/start?rd=$escaped_request_uri
      nginx.ingress.kubernetes.io/auth-response-headers: |-
        Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;
    labels:
      external-dns.io/provider: cloudflare

kube-prometheus-stack:
  defaultRules:
    # rules:
    #   etcd: false
    #   k8s: false
    #   kubeApiserverAvailability: false
    #   kubeApiserverBurnrate: false
    #   kubeApiserverHistogram: false
    #   kubeApiserverSlos: false
    #   kubeControllerManager: false
    #   kubelet: false
    #   kubeProxy: true
    #   kubernetesApps: false
    #   kubernetesResources: false
    #   kubernetesStorage: false
    #   kubernetesSystem: true
    #   kubeScheduler: false
    additionalRuleLabels:
      cluster: portefaix-k3s-homelab

  alertmanager:
    ingress:
      enabled: true
      ingressClassName: nginx
      hosts:
      - alertmanager.192.168.0.62.nip.io
      path: /
      pathType: Prefix
    alertmanagerSpec:
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: nfs-client
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 50Mi
      resources:
        limits:
          # cpu: 150m
          memory: 128Mi
        requests:
          cpu: 30m
          memory: 32Mi
      nodeSelector:
        portefaix.xyz/infra: "core"
    serviceMonitor:
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

  kubeApiServer:
    serviceMonitor:
      relabelings:
      # Remove high cardinality metrics
      - sourceLabels: ["__name__"]
        regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
        action: drop
      - sourceLabels: ["__name__"]
        regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
        action: drop
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster
      metricRelabelings:
      # Remove duplicate labels provided by k3s
      - action: keep
        sourceLabels: ["__name__"]
        regex: (aggregator_openapi|aggregator_unavailable|apiextensions_openapi|apiserver_admission|apiserver_audit|apiserver_cache|apiserver_cel|apiserver_client|apiserver_crd|apiserver_current|apiserver_envelope|apiserver_flowcontrol|apiserver_init|apiserver_kube|apiserver_longrunning|apiserver_request|apiserver_requested|apiserver_response|apiserver_selfrequest|apiserver_storage|apiserver_terminated|apiserver_tls|apiserver_watch|apiserver_webhooks|authenticated_user|authentication|disabled_metric|etcd_bookmark|etcd_lease|etcd_request|field_validation|get_token|go|grpc_client|hidden_metric|kube_apiserver|kubernetes_build|kubernetes_feature|node_authorizer|pod_security|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|serviceaccount_legacy|serviceaccount_stale|serviceaccount_valid|watch_cache|workqueue)_(.+)
      # Drop high cardinality labels
      - action: drop
        sourceLabels: ["__name__"]
        regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
      - action: drop
        sourceLabels: ["__name__"]
        regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)

  kubelet:
    serviceMonitor:
      cAdvisorRelabelings:
      - action: replace
        sourceLabels: [__metrics_path__]
        targetLabel: metrics_path
      - targetLabel: instance
        sourceLabels:
        - "node"
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster
      relabelings:
      - action: replace
        sourceLabels: [__metrics_path__]
        targetLabel: metrics_path
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster
      metricRelabelings:
      # Remove duplicate labels provided by k3s
      - action: keep
        sourceLabels: ["__name__"]
        regex: (apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|authentication_token|cadvisor_version|container_blkio|container_cpu|container_fs|container_last|container_memory|container_network|container_oom|container_processes|container|csi_operations|disabled_metric|get_token|go|hidden_metric|kubelet_certificate|kubelet_cgroup|kubelet_container|kubelet_containers|kubelet_cpu|kubelet_device|kubelet_graceful|kubelet_http|kubelet_lifecycle|kubelet_managed|kubelet_node|kubelet_pleg|kubelet_pod|kubelet_run|kubelet_running|kubelet_runtime|kubelet_server|kubelet_started|kubelet_volume|kubernetes_build|kubernetes_feature|machine_cpu|machine_memory|machine_nvm|machine_scrape|node_namespace|plugin_manager|prober_probe|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|storage_operation|volume_manager|volume_operation|workqueue)_(.+)
      - action: replace
        sourceLabels: ["node"]
        targetLabel: instance
      # Drop high cardinality labels
      - action: labeldrop
        regex: (uid)
      - action: labeldrop
        regex: (id|name)
      - action: drop
        sourceLabels: ["__name__"]
        regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)

  kubeControllerManager:
    endpoints:
    - 192.168.0.62
    service:
      enabled: true
      port: 10257
      targetPort: 10257
    serviceMonitor:
      https: true
      insecureSkipVerify: true
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster
      metricRelabelings:
      # Remove duplicate labels provided by k3s
      - action: keep
        sourceLabels: ["__name__"]
        regex: "(apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|attachdetach_controller|authenticated_user|authentication|cronjob_controller|disabled_metric|endpoint_slice|ephemeral_volume|garbagecollector_controller|get_token|go|hidden_metric|job_controller|kubernetes_build|kubernetes_feature|leader_election|node_collector|node_ipam|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|pv_collector|registered_metric|replicaset_controller|rest_client|retroactive_storageclass|root_ca|running_managed|scrape_duration|scrape_samples|scrape_series|service_controller|storage_count|storage_operation|ttl_after|volume_operation|workqueue)_(.+)"

  kubeEtcd:
    endpoints:
    - 192.168.0.62
    service:
      enabled: true
      port: 2381
      targetPort: 2381
    serviceMonitor:
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

  kubeScheduler:
    endpoints:
    - 192.168.0.62
    service:
      enabled: true
      port: 10259
      targetPort: 10259
    serviceMonitor:
      https: true
      insecureSkipVerify: true
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster
      metricRelabelings:
      # Remove duplicate labels provided by k3s
      - action: keep
        sourceLabels: ["__name__"]
        regex: "(apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|authenticated_user|authentication|disabled_metric|go|hidden_metric|kubernetes_build|kubernetes_feature|leader_election|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scheduler|scrape_duration|scrape_samples|scrape_series|workqueue)_(.+)"

  kubeProxy:
    endpoints:
    - 192.168.0.62
    service:
      enabled: true
      port: 10249
      targetPort: 10249
      selector:
        k8s-app: kube-proxy
    serviceMonitor:
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

  coreDns:
    serviceMonitor:
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

  kubeDns:
    serviceMonitor:
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

  kube-state-metrics:
    prometheus:
      monitor:
        relabelings:
        - action: replace
          replacement: portefaix-k3s-homelab
          targetLabel: cluster
        - targetLabel: "instance"
          sourceLabels:
          - "__meta_kubernetes_pod_node_name"
    resources:
      limits:
        # cpu: 200m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi

  prometheus-node-exporter:
    prometheus:
      monitor:
        relabelings:
        - action: replace
          replacement: portefaix-k3s-homelab
          targetLabel: cluster
        - targetLabel: "instance"
          sourceLabels:
          - "__meta_kubernetes_pod_node_name"
    resources:
      limits:
        # cpu: 150m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 25Mi

  prometheusOperator:
    resources:
      limits:
        # cpu: 200m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 100Mi
    prometheusConfigReloader:
      resources:
        limits:
          # cpu: 50m
          memory: 100Mi
        requests:
          cpu: 5m
          memory: 30Mi
    nodeSelector:
      portefaix.xyz/infra: "core"
    serviceMonitor:
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

  prometheus:
    ingress:
      enabled: true
      ingressClassName: nginx
      hosts:
      - prometheus.192.168.0.62.nip.io
      path: /
      pathType: Prefix

    serviceMonitor:
      relabelings:
      - action: replace
        replacement: portefaix-k3s-homelab
        targetLabel: cluster

    prometheusSpec:
      # externalUrl: https://prometheus.aws.portefaix.xyz
      image:
        tag: v2.42.0
      retention: 12h
      resources:
        limits:
          # cpu: 800m
          memory: 4Gi
        requests:
          cpu: 1000m
          memory: 2Gi
      nodeSelector:
        portefaix.xyz/infra: core
        kubernetes.io/arch: amd64

      # additionalScrapeConfigs:
      # - job_name: blackbox
      #   metrics_path: /probe
      #   params:
      #     module: [http_2xx]
      #   static_configs:
      #   - targets:
      #     # External
      #     - https://cloud.lamirault.xyz
      #     - https://portefaix.xyz
      #     - https://charts.portefaix.xyz
      #     # Internal
      #     # - http://alertmanager-operated.monitoring:9093
      #     # - http://grafana.monitoring:80
      #     # - http://prometheus-operated.monitoring:9090
      #     # - http://argo-cd-argocd-server.argocd:80
      #   relabel_configs:
      #   - source_labels: [__address__]
      #     target_label: __param_target
      #   - source_labels: [__param_target]
      #     # Important!
      #     target_label: target
      #     # Ensure blackbox-exporter is reachable from Prometheus
      #   - target_label: __address__
      #     replacement: blackbox-exporter-prometheus-blackbox-exporter.monitoring:9115
      # #   - job_name: "Tailscale hosts"
      # #     static_configs:
      # #       - targets:
      # #           - "192.168.0.62:8787"
      # #           - "192.168.1.4:8787"
      # #           - "192.168.1.123:8787"
      # #           - "192.168.1.30:8787"

      # # remoteWrite:
      # # - url: http://mimir-gateway.monitoring.svc.cluster.local:80/api/v1/push

      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: nfs-client
            resources:
              requests:
                storage: 200Mi

blackboxExporter:
  endpoint: blackbox-exporter-prometheus-blackbox-exporter.monitoring:9115
  probes:
    portefaix:
    # External
    - https://portefaix.xyz
    - https://nicolas.lamirault.xyz
    # Internal
    # - http://argo-cd-argocd-server.gitops.svc.cluster.local:80
    # - http://grafana.monitoring.svc.cluster.local:80
    # - http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
    # - http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
    tailscale:
    - "192.168.0.62:8787"
    - "192.168.0.208:8787"
    - "192.168.0.116:8787"
    - "192.168.0.233:8787"
    - "100.66.168.143:8787"
