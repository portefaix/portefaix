# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
ingress:
  enabled: true
  alertmanager:
    name: alertmanager.homelab.portefaix.xyz
    className: nginx
  prometheus:
    name: prometheus.homelab.portefaix.xyz
    className: nginx

kube-prometheus-stack:
  alertmanager:
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.identity.svc.cluster.local/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "http://auth.192.168.1.32.nip.io/oauth2/sign_in?rd=http://$host$request_uri"
      hosts:
        - alertmanager.192.168.1.32.nip.io
      path: /
      pathType: Prefix
    alertmanagerSpec:
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: nfs-client
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 50Mi
      resources:
        limits:
          # cpu: 150m
          memory: 128Mi
        requests:
          cpu: 30m
          memory: 32Mi

  kube-state-metrics:
    resources:
      limits:
        # cpu: 200m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi

  prometheus-node-exporter:
    resources:
      limits:
        # cpu: 150m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi

  prometheusOperator:
    resources:
      limits:
        # cpu: 200m
        memory: 256Mi
      requests:
        cpu: 30m
        memory: 96Mi
    prometheusConfigReloader:
      resources:
        limits:
          # cpu: 50m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 50Mi

  prometheus:
    thanosService:
      enabled: true
    thanosServiceMonitor:
      enabled: true
    thanosIngress:
      enabled: false

    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.identity.svc.cluster.local/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "http://auth.192.168.1.32.nip.io/oauth2/sign_in?rd=http://$host$request_uri"
      hosts:
        - prometheus.192.168.1.32.nip.io
      path: /
      pathType: Prefix
    # thanosIngress:
    #   enabled: true
    #   ingressClassName: nginx
    #   annotations:
    #     # nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.identity.svc.cluster.local/oauth2/auth"
    #     # nginx.ingress.kubernetes.io/auth-signin: "http://auth.192.168.1.32.nip.io/oauth2/sign_in?rd=http://$host$request_uri"
    #     # nginx.ingress.kubernetes.io/configuration-snippet: |
    #     #   proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
    #     #   grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
    #   hosts:
    #     - prometheus-sidecar.192.168.1.32.nip.io
    #   path: /
    #   pathType: Prefix
    prometheusSpec:
      # externalUrl: https://prometheus.aws.portefaix.xyz
      retention: 2d
      resources:
        limits:
          # cpu: 800m
          memory: 4000Mi
        requests:
          cpu: 400m
          memory: 2000Mi
      additionalScrapeConfigs:
        - job_name: blackbox
          metrics_path: /probe
          params:
            module: [http_2xx]
          static_configs:
            - targets:
              # External
              # - https://cloud.lamirault.xyz
              # - https://portefaix.xyz
              # - https://charts.portefaix.xyz
              # Internal
              - http://alertmanager-operated.monitoring:9093
              - http://grafana.monitoring:80
              - http://prometheus-operated.monitoring:9090
              - http://argo-cd-argocd-server.argocd:80
              - http://minio-console.storage:9001
              - http://chaos-dashboard.chaos-mesh:2333
              - http://kyverno-reporter-ui.kyverno:8080
          relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            # Important!
            target_label: target
            # Ensure blackbox-exporter is reachable from Prometheus
          - target_label: __address__
            replacement: blackbox-exporter-prometheus-blackbox-exporter.monitoring:9115
      #   - job_name: "Tailscale hosts"
      #     static_configs:
      #       - targets:
      #           - "192.168.1.32:8787"
      #           - "192.168.1.4:8787"
      #           - "192.168.1.123:8787"
      #           - "192.168.1.30:8787"
      # remoteWrite:
      #   - url: "https://prometheus-us-central1.grafana.net/api/prom/push"
      #     basicAuth:
      #       username:
      #         name: grafana-cloud
      #         key: username
      #       password:
      #         name: grafana-cloud
      #         key: password
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: nfs-client
            resources:
              requests:
                storage: 200Mi
      # thanos:
      #   logFormat: json
      #   logLevel: info
      #   objectStorageConfig:
      #     name: thanos-objstore-config
      #     key: object-store.yaml

  kubeControllerManager:
    enabled: true
    endpoints:
    - 192.168.1.32
    # - 192.168.1.4
    # - 192.168.1.123
    # - 192.168.1.30
    service:
      enabled: true
      port: 10257
      targetPort: 10257
    serviceMonitor:
      https: true
      insecureSkipVerify: true

  # kubeEtcd:
  #   enabled: true
  #   endpoints:
  #   - 192.168.1.32
  #   - 192.168.1.4
  #   - 192.168.1.123
  #   - 192.168.1.30
  #   service:
  #     enabled: true
  #     port: 2381
  #     targetPort: 2381

  kubeScheduler:
    enabled: true
    endpoints:
    - 192.168.1.32
    # - 192.168.1.4
    # - 192.168.1.123
    # - 192.168.1.30
    service:
      enabled: true
      port: 10259
      targetPort: 10259
    serviceMonitor:
      https: true
      insecureSkipVerify: true

  kubeProxy:
    enabled: true
    endpoints:
    - 192.168.1.32
    # - 192.168.1.4
    # - 192.168.1.123
    # - 192.168.1.30

  