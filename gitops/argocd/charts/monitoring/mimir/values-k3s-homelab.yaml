# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
mimir-distributed:
  global:
    extraEnvFrom:
    - secretRef:
        name: mimir-cloudflare-credentials
    extraEnv:
    - name: JAEGER_AGENT_HOST
      value: "tempo-distributor.tracing.svc.cluster.local"
    - name: JAEGER_AGENT_PORT
      value: "6831"
    - name: JAEGER_SAMPLER_TYPE
      value: "const"
    - name: JAEGER_DISABLED
      value: "false"
    - name: JAEGER_SERVICE_NAME
      value: "mimir"

  rbac:
    type: not

  mimir:
    structuredConfig:
      common:
        storage:
          backend: s3
          s3:
            access_key_id: ${AWS_ACCESS_KEY_ID}
            secret_access_key: ${AWS_SECRET_ACCESS_KEY}
            endpoint: ${AWS_S3_ENDPOINT_NO_HTTPS}
            insecure: false

      memberlist:
        abort_if_cluster_join_fails: true

      ingester:
        ring:
          unregister_on_shutdown: true
          #replication_factor: 3

      limits:
        # Adjust max query parallelism to 16x sharding, without sharding we can run 14d queries fully in parallel.
        # With sharding we can further shard each day another 16 times. 14 days * 16 shards = 224 subqueries.
        max_query_parallelism: 224
        max_global_series_per_user: 0
        ingestion_rate: 0
        # Delete from storage metrics data older than 1 year.
        compactor_blocks_retention_period: 1m
        # Allow ingestion of out-of-order samples up to 30 minutes since the latest received sample for the series.
        out_of_order_time_window: 1h

      blocks_storage:
        s3:
          bucket_name: portefaix-homelab-metrics-tsdb

      alertmanager_storage:
        s3:
          bucket_name: portefaix-homelab-metrics-alert

      ruler_storage:
        s3:
          bucket_name: portefaix-homelab-metrics-ruler

      distributor:
        remote_timeout: 4s
        forwarding:
          request_timeout: 4s

  alertmanager:
    replicas: 1
    resources:
      limits:
        # cpu: 50m
        memory: 64Mi
      requests:
        cpu: 50m
        memory: 32Mi
    persistentVolume:
      enabled: true
      accessModes:
      - ReadWriteOnce
      size: 100Mi
      storageClass: nfs-client
    statefulSet:
      enabled: true
    zoneAwareReplication:
      enabled: false

  distributor:
    replicas: 1
    resources:
      limits:
        # cpu: 150m
        memory: 1Gi
      requests:
        cpu: 10m
        memory: 512Mi
    affinity: {}

  ingester:
    replicas: 3
    resources:
      limits:
        # cpu: 150m
        memory: 2Gi
      requests:
        cpu: 100m
        memory: 512Mi
    persistentVolume:
      enabled: true
      accessModes:
      - ReadWriteOnce
      size: 1Gi
      storageClass: nfs-client
    zoneAwareReplication:
      enabled: false

  overrides_exporter:
    replicas: 1
    resources:
      limits:
        # cpu: 150m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 124Mi

  ruler:
    replicas: 1
    resources:
      limits:
        # cpu: 150m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 124Mi

  querier:
    replicas: 1
    resources:
      limits:
        # cpu: 150m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 124Mi
    affinity: {}

  query_frontend:
    replicas: 1
    resources:
      limits:
        # cpu: 150m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 124Mi
    persistentVolume:
      enabled: true
      accessModes:
      - ReadWriteOnce
      size: 1Gi
      storageClass: nfs-client

  query_scheduler:
    replicas: 1
    resources:
      limits:
        # cpu: 150m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 124Mi

  store_gateway:
    replicas: 1
    resources:
      limits:
        # cpu: 150m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 124Mi
    affinity: {}
    persistentVolume:
      enabled: true
      accessModes:
      - ReadWriteOnce
      size: 1Gi
      storageClass: nfs-client
    zoneAwareReplication:
      enabled: false

  compactor:
    replicas: 1
    resources:
      limits:
        # cpu: 150m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 512Mi
    affinity: {}
    persistentVolume:
      enabled: true
      accessModes:
      - ReadWriteOnce
      size: 1Gi
      storageClass: nfs-client

  memcachedExporter:
    enabled: true
    resources:
      limits:
        # cpu: 150m
        memory: 125Mi
      requests:
        cpu: 20m
        memory: 50Mi

  nginx:
    replicas: 1
    verboseLogging: true
    resources:
      limits:
        # cpu: 150m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 124Mi
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.identity.svc.cluster.local/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "http://auth.192.168.0.62.nip.io/oauth2/sign_in?rd=http://$host$request_uri"
      hosts:
      - host: mimir.192.168.0.62.nip.io
        paths:
        - path: /
          pathType: Prefix
      tls: []
    affinity: null

  metaMonitoring:
    serviceMonitor:
      clusterLabel: k3s-homelab

mimir-mixin:
  additionalLabels:
    portefaix.xyz/version: v0.46.0

  additionalAnnotations: {}

  monitor:
    additionalLabels:
      monitoring: portefaix

  grafana:
    folder: monitoring
