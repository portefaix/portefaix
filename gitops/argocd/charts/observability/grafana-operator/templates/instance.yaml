# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  labels:
    {{- include "grafana-operator.labels" $ | nindent 4 }}
    app.kubernetes.io/component: instance
    {{- toYaml .Values.grafanaOperator.matchLabels | nindent 4 }}
  name: grafana-{{ .Values.grafanaOperator.instance.name }}
  namespace: {{ $.Release.Namespace }}
spec:
  service:
    metadata:
      labels:
        {{- include "grafana-operator.labels" $ | nindent 8 }}
        app.kubernetes.io/component: instance
  deployment:
    spec:
      template:
        metadata:
          labels:
            {{- include "grafana-operator.labels" $ | nindent 12 }}
            app.kubernetes.io/component: instance
            {{- toYaml .Values.grafanaOperator.matchLabels | nindent 12 }}
        spec:
          containers:
          - name: grafana
            image: docker.io/grafana/grafana:11.0.0
            env:
            - name: GF_DIAGNOSTICS_PROFILING_ENABLED
              value: "true"
            - name: GF_DIAGNOSTICS_PROFILING_ADDR
              value: "0.0.0.0"
            - name: GF_DIAGNOSTICS_PROFILING_PORT
              value: "6060"
            envFrom:
            - configMapRef:
                name: grafana-commons
            - secretRef:
                name: grafana-operator-credentials
            - secretRef:
                name: grafana-dex-credentials
  config:
    log:
      mode: console
      level: info
    log.console:
      format: json
    server:
      root_url: http://grafana.${CLUSTER_DOMAIN}
    auth:
      oauth_auto_login: "false"
      disable_login_form: "false"
    auth.basic:
      enable: "true"
    auth.generic_oauth:
      enabled: "true"
      allow_sign_up: "true"
      name: Dex
      client_id: grafana-sso
      # client_id: "${DEX_GITHUB_CLIENT_ID}" # Set using GF_AUTH_GENERIC_OAUTH_CLIENT_ID
      # client_secret: "${DEX_GITHUB_CLIENT_SECRET}" # Set using GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
      scopes: "openid profile email groups"
      auth_url: "http://dex.${CLUSTER_DOMAIN}/auth"
      token_url: "http://dex.${CLUSTER_DOMAIN}/token"
      api_url: "http://dex.${CLUSTER_DOMAIN}/userinfo"
    auth.generic_oauth.group_mapping:
      role_attribute_path: >-
        contains(groups[*], 'portefaix:Admin') && 'Admin' ||
        contains(groups[*], 'portefaix:Devops') && 'Editor'
      org_id: "1"
    # auth.github:
    #   enabled: "true"
    #   allow_sign_up: "true"
    #   scopes: user:email,read:org
    #   auth_url: https://github.com/login/oauth/authorize
    #   token_url: https://github.com/login/oauth/access_token
    #   api_url: https://api.github.com/user
    #   allowed_organizations: portefaix
    #   client_id: "${GRAFANA_AUTH_GITHUB_CLIENT_ID}"
    #   client_secret: "${GRAFANA_AUTH_GITHUB_CLIENT_SECRET}"
    # auth.github.group_mapping:
    #   role_attribute_path: >-
    #     contains(groups[*], 'portefaix:Admin') && 'Admin' ||
    #     contains(groups[*], 'portefaix:Devops') && 'Editor'
    #   org_id: "1"
    feature_toggles:
      enable: traceToMetrics, tempoApmTable, tempoServiceGraph, tempoBackendSearch, tempoSearch
    security:
      admin_user: admin
