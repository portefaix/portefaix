# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

# ---
# apiVersion: grafana.integreatly.org/v1beta1
# kind: GrafanaAlertRuleGroup
# metadata:
#   labels:
#     {{- include "grafana-operator.labels" $ | nindent 4 }}
#     app.kubernetes.io/component: workload
#     app: grafana
#     grafana.com/instance: portefaix
#   name: {{ .Values.grafanaOperator.instance.name }}
#   namespace: {{ $.Release.Namespace }}
# spec:
#   folderRef: test-folder
#   instanceSelector:
#     matchLabels:
#       {{- toYaml $.Values.grafanaOperator.matchLabels | nindent 6 }}
#   interval: 5m
#   rules:
#     - condition: B
#       data:
#         - datasourceUid: grafanacloud-demoinfra-prom
#           model:
#             datasource:
#                 type: prometheus
#                 uid: grafanacloud-demoinfra-prom
#             editorMode: code
#             expr: weather_temp_c{}
#             instant: true
#             intervalMs: 1000
#             legendFormat: __auto
#             maxDataPoints: 43200
#             range: false
#             refId: A
#           refId: A
#           relativeTimeRange:
#             from: 600
#         - datasourceUid: __expr__
#           model:
#             conditions:
#                 - evaluator:
#                     params:
#                         - 0
#                     type: lt
#                   operator:
#                     type: and
#                   query:
#                     params:
#                         - C
#                   reducer:
#                     params: []
#                     type: last
#                   type: query
#             datasource:
#                 type: __expr__
#                 uid: __expr__
#             expression: A
#             intervalMs: 1000
#             maxDataPoints: 43200
#             refId: B
#             type: threshold
#           refId: B
#           relativeTimeRange:
#             from: 600
#       execErrState: Error
#       for: 5m0s
#       noDataState: NoData
#       title: Temperature below zero
#       uid: portefaix-alert-core
