# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

project:
  created: true
  name: portefaix-aws-staging

dex:
  auth0:
    clientId: xxx
    clientSecret: xxx
  github:
    clientId: xxxx
    clientSecret: xxxxx

## ArgoCD configuration
## Ref: https://github.com/argoproj/argo-cd
##
argo-cd:

  controller:
    resources:
      limits:
        # cpu: 600m
        memory: 800Mi
      requests:
        cpu: 600m
        memory: 400Mi

  dex:
    resources:
      limits:
        # cpu: 600m
        memory: 128Mi
      requests:
        cpu: 300m
        memory: 64Mi
    # envFrom:
    #   - secretRef:
    #       name: argocd-dex

  redis:
    resources:
      limits:
        # cpu: 600m
        memory: 512Mi
      requests:
        cpu: 30m
        memory: 256Mi

  server:
    resources:
      limits:
        # cpu: 800m
        memory: 512Mi
      requests:
        cpu: 500m
        memory: 256Mi
    ingress:
      enabled: true
      ingressClassName: alb
      annotations:
        # kubernetes.io/ingress.class: alb
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/target-type: ip
        alb.ingress.kubernetes.io/success-codes: "200"
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
        alb.ingress.kubernetes.io/group.name: portefaix-grafana
        alb.ingress.kubernetes.io/auth-type: oidc
        alb.ingress.kubernetes.io/auth-idp-oidc: '{"issuer":"https://portefaix.eu.auth0.com","authorizationEndpoint":"https://portefaix.eu.auth0.com/authorize","tokenEndpoint":"https://portefaix.eu.auth0.com/oauth/token","userInfoEndpoint":"https://portefaix.eu.auth0.com/userinfo","secretName":"portefaix-aws-auth0"}'
        alb.ingress.kubernetes.io/auth-scope: 'email openid'
        alb.ingress.kubernetes.io/auth-on-unauthenticated-request: authenticate
        alb.ingress.kubernetes.io/tags: Project=Portefaix,Service=Grafana,Env=Staging,Made-By=ArgoCD
        alb.ingress.kubernetes.io/healthcheck-interval-seconds: "5"
        alb.ingress.kubernetes.io/healthcheck-path: /
        alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
        alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "4"
        alb.ingress.kubernetes.io/healthy-threshold-count: "2"
        alb.ingress.kubernetes.io/unhealthy-threshold-count: "2"
        alb.ingress.kubernetes.io/wafv2-acl-arn: arn:aws:wafv2:eu-west-1:845676325565:regional/webacl/portefaix-staging-core/XXXXXXXXXXXXX
        cert-manager.io/cluster-issuer: letsencrypt-prod
        external-dns.alpha.kubernetes.io/hostname: grafana.aws.portefaix.xyz
      hosts:
        - argo-cd.aws.portefaix.xyz
      path: /
      pathType: Prefix
    config:
      url: http://argo-cd.aws.portefaix.xyz
      dex.config: |
        connectors:
          - type: github
            id: github
            name: GitHub
            config:
              clientID: $argocd-dex:dex.github.clientId
              clientSecret: $argocd-dex:dex.github.clientSecret
              orgs:
              - name: portefaix
          - type: oidc
            id: auth0
            name: Auth0
            config:
              issuer: https://portefaix.eu.auth0.com/
              clientID: $argocd-dex:dex.auth0.clientId
              clientSecret: $argocd-dex:dex.auth0.clientSecret
              insecureEnableGroups: true
              requestedScopes:
              - openid
              - profile
              - email
              # not strictly necessary - but good practice:
              # - 'http://your.domain/groups'

    rbacConfig:
      policy.default: role:readonly
      policy.csv: |
        p, role:org-admin, applications, *, */*, allow
        p, role:org-admin, clusters, *, *, allow
        p, role:org-admin, projects, *, *, allow
        p, role:org-admin, roles, *, *, allow
        p, role:org-admin, repositories, *, *, allow
        g, portefaix:Admin, role:org-admin

        p, role:org-devops, applications, get, */*, allow
        p, role:org-devops, projects, get, *, allow
        g, portefaix:Devops, role:org-devops

  repoServer:
    resources:
      limits:
        # cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 600m
        memory: 500Mi

  applicationSet:
    enabled: false

  notifications:
    argocdUrl: http://argo-cd.aws.portefaix.xyz
    resources:
      limits:
        # cpu: 300m
        memory: 200Mi
      requests:
        cpu: 150m
        memory: 150Mi
    # bots:
    #   slack:
    #     resources:
    #       limits:
    #         cpu: 200m
    #         memory: 200Mi
    #       requests:
    #         cpu: 50m
    #         memory: 50Mi
