# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
project:
  created: false

ingress:
  enabled: false

grafana:
  # Grafana folder in which to store the dashboards
  folder: gitops

argo-cd:
  global:
    securityContext:
      runAsUser: 999
      runAsGroup: 999
      fsGroup: 999

    additionalLabels:
      portefaix.xyz/version: v0.39.0

  ## Controller
  controller:
    args:
      # -- define the application controller `--status-processors`
      statusProcessors: "20"
      # -- define the application controller `--operation-processors`
      operationProcessors: "40"
      # -- define the application controller `--app-resync`
      appResyncPeriod: "360"
      # -- define the application controller `--self-heal-timeout-seconds`
      selfHealTimeout: "15"
      # -- define the application controller `--repo-server-timeout-seconds`
      repoServerTimeoutSeconds: "180"
    logFormat: json
    logLevel: info
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        additionalLabels:
          monitoring: portefaix
      rules:
        enabled: true
        spec:
          - alert: ArgoAppMissing
            expr: |
              absent(argocd_app_info)
            for: 15m
            labels:
              severity: critical
            annotations:
              summary: "Argo CD: No reported applications"
              description: >
                Argo CD has not reported any applications data for the past 15 minutes which
                means that it must be down or not functioning properly.  This needs to be
                resolved for this cloud to continue to maintain state.
          - alert: ArgoAppNotSynced
            expr: |
              argocd_app_info{sync_status!="Synced"} == 1
            for: 12h
            labels:
              severity: warning
            annotations:
              summary: "[{{`{{$labels.name}}`}}] Application not synchronized"
              description: >
                The application [{{`{{$labels.name}}`}} has not been synchronized for over
                12 hours which means that the state of this cloud has drifted away from the
                state inside Git.
          # - alert: ArgoAppSyncStateOutOfSync
          #   annotations:
          #     description: The ArgoCD application {{ "{{" }} $labels.name {{ "}}" }} needs to be synced
          #     summary: An ArgoCD applications SyncState is OutOfSync for a unusally long
          #       time
          #   expr: sum(argocd_app_info{sync_status="Unknown"}) >= 1
          #   for: 15m
          #   labels:
          #     severity: warning
          # - alert: ArgoAppSyncStateUnknown
          #   annotations:
          #     description: The ArgoCD application {{ "{{" }} $labels.name {{ "}}" }} needs to be checked/validated
          #     summary: An ArgoCD applications SyncState is Unknown for a unusally long time
          #   expr: sum(argocd_app_info{sync_status="OutOfSync"}) >= 1
          #   for: 15m
          #   labels:
          #     severity: warning
          # - alert: ArgoAppHealthStateUnhealthy
          #   annotations:
          #     description: The ArgoCD application {{ "{{" }} $labels.name {{ "}}" }} is not getting in to
          #       a healthy state even after enough reconciliation time
          #     summary: An ArgoCD applications HealthState is not Healthy for an unsually
          #       long time
          #   expr: sum(argocd_app_info{health_status!="Healthy"}) >= 1
          #   for: 15m
          #   labels:
          #     severity: warning
  dex:
    metrics:
      enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        monitoring: portefaix

  redis:
    enabled: true
    metrics:
      enabled: true
      image:
        repository: oliver006/redis_exporter
        tag: v1.43.0
        # repository: quay.io/bitnami/redis-exporter
        # tag: 1.26.0-debian-10-r2
      serviceMonitor:
        enabled: true
        additionalLabels:
          monitoring: portefaix

  server:
    extraArgs:
      - --insecure
    logFormat: json
    logLevel: info
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        additionalLabels:
          monitoring: portefaix
    config:
      application.instanceLabelKey: "argocd.argoproj.io/instance"
      statusbadge.enabled: "true"
      # disables admin user. Admin is enabled by default
      # admin.enabled: "false"

  repoServer:
    logFormat: json
    logLevel: info
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        additionalLabels:
          monitoring: portefaix

  notifications:
    secret:
      create: false
      name: argocd-notifications-secret
    logLevel: info
    logFormat: json
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        additionalLabels:
          monitoring: portefaix

    notifiers:
      service.slack: |
        token: $slack-token

    subscriptions:
      # subscription for on-sync-status-unknown trigger notifications
      - recipients:
        - slack:portefaix-homelab-gitops
        triggers:
        - on-sync-status-unknown
      # # subscription restricted to applications with matching labels only
      # - recipients:
      #   - slack:portefaix-homelab-gitops
      #   selector: test=true
      #   triggers:
      #   - on-sync-status-unknown

    templates:
      template.app-created: |
        email:
          subject: Application {{.app.metadata.name}} has been created.
        message: Application {{.app.metadata.name}} has been created.
      template.app-deleted: |
        email:
          subject: Application {{.app.metadata.name}} has been deleted.
        message: Application {{.app.metadata.name}} has been deleted.
      template.app-deployed: |
        email:
          subject: New version of an application {{.app.metadata.name}} is up and running.
        message: |
          {{if eq .serviceType "slack"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.
        slack:
          attachments: |
            [{
              "title": "{{ .app.metadata.name}}",
              "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
              "color": "#18be52",
              "fields": [
              {
                "title": "Sync Status",
                "value": "{{.app.status.sync.status}}",
                "short": true
              },
              {
                "title": "Repository",
                "value": "{{.app.spec.source.repoURL}}",
                "short": true
              },
              {
                "title": "Revision",
                "value": "{{.app.status.sync.revision}}",
                "short": true
              }
              {{range $index, $c := .app.status.conditions}}
              {{if not $index}},{{end}}
              {{if $index}},{{end}}
              {
                "title": "{{$c.type}}",
                "value": "{{$c.message}}",
                "short": true
              }
              {{end}}
              ]
            }]
      template.app-health-degraded: |
        email:
          subject: Application {{.app.metadata.name}} has degraded.
        message: |
          {{if eq .serviceType "slack"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.
          Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
        slack:
          attachments: |-
            [{
              "title": "{{ .app.metadata.name}}",
              "title_link": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
              "color": "#f4c030",
              "fields": [
              {
                "title": "Sync Status",
                "value": "{{.app.status.sync.status}}",
                "short": true
              },
              {
                "title": "Repository",
                "value": "{{.app.spec.source.repoURL}}",
                "short": true
              }
              {{range $index, $c := .app.status.conditions}}
              {{if not $index}},{{end}}
              {{if $index}},{{end}}
              {
                "title": "{{$c.type}}",
                "value": "{{$c.message}}",
                "short": true
              }
              {{end}}
              ]
            }]
      template.app-sync-failed: |
        email:
          subject: Failed to sync application {{.app.metadata.name}}.
        message: |
          {{if eq .serviceType "slack"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}
          Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
        slack:
          attachments: |-
            [{
              "title": "{{ .app.metadata.name}}",
              "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
              "color": "#E96D76",
              "fields": [
              {
                "title": "Sync Status",
                "value": "{{.app.status.sync.status}}",
                "short": true
              },
              {
                "title": "Repository",
                "value": "{{.app.spec.source.repoURL}}",
                "short": true
              }
              {{range $index, $c := .app.status.conditions}}
              {{if not $index}},{{end}}
              {{if $index}},{{end}}
              {
                "title": "{{$c.type}}",
                "value": "{{$c.message}}",
                "short": true
              }
              {{end}}
              ]
            }]
      template.app-sync-running: |
        email:
          subject: Start syncing application {{.app.metadata.name}}.
        message: |
          The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.
          Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
        slack:
          attachments: |-
            [{
              "title": "{{ .app.metadata.name}}",
              "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
              "color": "#0DADEA",
              "fields": [
              {
                "title": "Sync Status",
                "value": "{{.app.status.sync.status}}",
                "short": true
              },
              {
                "title": "Repository",
                "value": "{{.app.spec.source.repoURL}}",
                "short": true
              }
              {{range $index, $c := .app.status.conditions}}
              {{if not $index}},{{end}}
              {{if $index}},{{end}}
              {
                "title": "{{$c.type}}",
                "value": "{{$c.message}}",
                "short": true
              }
              {{end}}
              ]
            }]
      template.app-sync-status-unknown: |
        email:
          subject: Application {{.app.metadata.name}} sync status is 'Unknown'
        message: |
          {{if eq .serviceType "slack"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.
          Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
          {{if ne .serviceType "slack"}}
          {{range $c := .app.status.conditions}}
              * {{$c.message}}
          {{end}}
          {{end}}
        slack:
          attachments: |-
            [{
              "title": "{{ .app.metadata.name}}",
              "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
              "color": "#E96D76",
              "fields": [
              {
                "title": "Sync Status",
                "value": "{{.app.status.sync.status}}",
                "short": true
              },
              {
                "title": "Repository",
                "value": "{{.app.spec.source.repoURL}}",
                "short": true
              }
              {{range $index, $c := .app.status.conditions}}
              {{if not $index}},{{end}}
              {{if $index}},{{end}}
              {
                "title": "{{$c.type}}",
                "value": "{{$c.message}}",
                "short": true
              }
              {{end}}
              ]
            }]
      template.app-sync-succeeded: |
        email:
          subject: Application {{.app.metadata.name}} has been successfully synced.
        message: |
          {{if eq .serviceType "slack"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.
          Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
        slack:
          attachments: |-
            [{
              "title": "{{ .app.metadata.name}}",
              "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
              "color": "#18be52",
              "fields": [
              {
                "title": "Sync Status",
                "value": "{{.app.status.sync.status}}",
                "short": true
              },
              {
                "title": "Repository",
                "value": "{{.app.spec.source.repoURL}}",
                "short": true
              }
              {{range $index, $c := .app.status.conditions}}
              {{if not $index}},{{end}}
              {{if $index}},{{end}}
              {
                "title": "{{$c.type}}",
                "value": "{{$c.message}}",
                "short": true
              }
              {{end}}
              ]
            }]

    triggers:
      trigger.on-deployed: |
        - description: Application is synced and healthy. Triggered once per commit.
          oncePer: app.status.sync.revision
          send:
          - app-deployed
          when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
      trigger.on-health-degraded: |
        - description: Application has degraded
          send:
          - app-health-degraded
          when: app.status.health.status == 'Degraded'
      trigger.on-sync-failed: |
        - description: Application syncing has failed
          send:
          - app-sync-failed
          when: app.status.operationState.phase in ['Error', 'Failed']
      trigger.on-sync-running: |
        - description: Application is being synced
          send:
          - app-sync-running
          when: app.status.operationState.phase in ['Running']
      trigger.on-sync-status-unknown: |
        - description: Application status is 'Unknown'
          send:
          - app-sync-status-unknown
          when: app.status.sync.status == 'Unknown'
      trigger.on-sync-succeeded: |
        - description: Application syncing has succeeded
          send:
          - app-sync-succeeded
          when: app.status.operationState.phase in ['Succeeded']

      defaultTriggers: |
        - on-sync-status-unknown

    bots:
      slack:
        enabled: false
        service:
          type: ClusterIP

  applicationSet:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        additionalLabels:
          monitoring: portefaix
