# SPDX-FileCopyrightText: Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  values:
    store:
      enabled: true
      persistentVolumeClaim:
        name: thanos-store-data-volume
        spec:
          #  storageClassName: ""
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 200Mi
      resources:
        limits:
          # cpu: 300m
          memory: 800Mi
        requests:
          cpu: 50m
          memory: 200Mi

    query:
      enabled: true
      http:
        ingress:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.identity.svc.cluster.local/oauth2/auth"
            nginx.ingress.kubernetes.io/auth-signin: "http://auth.192.168.1.4.nip.io/oauth2/sign_in?rd=http://$host$request_uri"
            hajimari.io/enable: "true"
            hajimari.io/icon: database-arrow-left
            hajimari.io/appName: Thanos
            hajimari.io/group: "Observability"
          hosts:
          - thanos.192.168.1.4.nip.io
      resources:
        limits:
          # cpu: 300m
          memory: 400Mi
        requests:
          cpu: 50m
          memory: 100Mi
      stores:
      #  - "dnssrv+_grpc._tcp.<service>.<namespace>.svc.cluster.local"
      - "dnssrv+_grpc._tcp.kube-prometheus-stack-prometheus.monitoring.svc.cluster.local"

    compact:
      enabled: true
      persistentVolumeClaim:
        name: thanos-compact-data-volume
        spec:
          # storageClassName: ""
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 200Mi
              # resources:
              #   limits:
              #     cpu: 300m
              #     memory: 500Mi
              #   requests:
              #     cpu: 100m
              #     memory: 200Mi

    bucket:
      enabled: true
      http:
        ingress:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.identity.svc.cluster.local/oauth2/auth"
            nginx.ingress.kubernetes.io/auth-signin: "http://auth.192.168.1.4.nip.io/oauth2/sign_in?rd=http://$host$request_uri"
          hosts:
          - thanos-bucket.192.168.1.4.nip.io
          # resources:
          #   limits:
          #     cpu: 200m
          #     memory: 300Mi
          #   requests:
          #     cpu: 100m
          #     memory: 100Mi

    rule:
      enabled: false

    sidecar:
      enable: true
