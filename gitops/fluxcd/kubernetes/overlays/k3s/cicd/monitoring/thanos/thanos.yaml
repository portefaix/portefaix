# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  values:
    store:
      enabled: true
      persistentVolumeClaim:
        name: thanos-store-data-volume
        spec:
          storageClassName: local-path
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Mi
      resources:
        limits:
          # cpu: 60m
          memory: 64Mi
        requests:
          cpu: 30m
          memory: 32Mi

    query:
      enabled: true
      # http:
      #   ingress:
      #     enabled: true
      #     apiVersion: networking.k8s.io/v1beta1
      #     annotations:
      #       kubernetes.io/ingress.class: nginx
      #     hosts:
      #       - thanos.cicd.portefaix.xyz
      #     # tls:
      #     #   - secretName: thanos.cicd.portefaix.xyz-tls
      #     #     hosts:
      #     #       - thanos.cicd.portefaix.xyz
      resources:
        limits:
          # cpu: 60m
          memory: 64Mi
        requests:
          cpu: 30m
          memory: 32Mi
      stores:
      #  - "dnssrv+_grpc._tcp.<service>.<namespace>.svc.cluster.local"
      - "dnssrv+_grpc._tcp.kube-prometheus-stack-prometheus.monitoring.svc.cluster.local"

    queryFrontend:
      resources:
        limits:
          # cpu: 60m
          memory: 64Mi
        requests:
          cpu: 30m
          memory: 32Mi

    compact:
      enabled: true
      persistentVolumeClaim:
        name: thanos-compact-data-volume
        spec:
          storageClassName: local-path
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Mi
      resources:
        limits:
          # cpu: 60m
          memory: 64Mi
        requests:
          cpu: 30m
          memory: 32Mi

    bucket:
      enabled: true
      # http:
      #   ingress:
      #     enabled: true
      #     apiVersion: networking.k8s.io/v1beta1
      #     annotations:
      #       kubernetes.io/ingress.class: nginx
      #     hosts:
      #       - thanos-bucket.cicd.portefaix.xyz
      resources:
        limits:
          # cpu: 60m
          memory: 64Mi
        requests:
          cpu: 30m
          memory: 32Mi

    rule:
      # http:
      #   ingress:
      #     enabled: true
      #     apiVersion: networking.k8s.io/v1beta1
      #     annotations:
      #       kubernetes.io/ingress.class: nginx
      #     hosts:
      #       - thanos-rule.cicd.portefaix.xyz
      persistentVolumeClaim:
        name: thanos-rule-data-volume
        spec:
          storageClassName: local-path
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 20Mi
      resources:
        limits:
          # cpu: 30m
          memory: 32Mi
        requests:
          cpu: 10m
          memory: 16Mi

    sidecar:
      enable: true
