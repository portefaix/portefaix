---
# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  values:
    store:
      enabled: true
      persistentVolumeClaim:
        name: thanos-store-data-volume
        spec:
          #  storageClassName: ""
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
      resources:
        limits:
          # cpu: 300m
          memory: 800Mi
        requests:
          cpu: 100m
          memory: 400Mi

    query:
      enabled: true
      http:
        ingress:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: alb
            alb.ingress.kubernetes.io/scheme: internet-facing
            alb.ingress.kubernetes.io/target-type: ip
            alb.ingress.kubernetes.io/success-codes: "200"
            alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
            cert-manager.io/cluster-issuer: letsencrypt-prod
            external-dns.alpha.kubernetes.io/hostname: thanos.aws.portefaix.xyz
            # nginx.ingress.kubernetes.io/auth-url: https://forwardauth.aws.portefaix.xyz/verify?uri=$scheme://$host$request_uri
            # nginx.ingress.kubernetes.io/auth-signin: "https://forwardauth.aws.portefaix.xyz/?uri=$scheme://$host$request_uri"
          hosts:
          - thanos.aws.portefaix.xyz
          # tls:
          #   - secretName: thanos.aws.portefaix.xyz-tls
          #     hosts:
          #       - thanos.aws.portefaix.xyz
      resources:
        limits:
          # cpu: 800m
          memory: 1Gi
        requests:
          cpu: 300m
          memory: 500Mi
      stores:
      #  - "dnssrv+_grpc._tcp.<service>.<namespace>.svc.cluster.local"
      - "dnssrv+_grpc._tcp.kube-prometheus-stack-prometheus.monitoring.svc.cluster.local"

    compact:
      enabled: true
      persistentVolumeClaim:
        name: thanos-compact-data-volume
        spec:
          storageClassName: "gp2" # <-- default on EKS
          # storageClassName: "csi-aws-ebs"
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
      resources:
        limits:
          # cpu: 300m
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 200Mi

    bucket:
      enabled: true
      http:
        ingress:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: alb
            alb.ingress.kubernetes.io/scheme: internet-facing
            alb.ingress.kubernetes.io/target-type: ip
            alb.ingress.kubernetes.io/success-codes: "200"
            alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
            alb.ingress.kubernetes.io/group.name: portefaix-thanos
            alb.ingress.kubernetes.io/auth-type: oidc
            alb.ingress.kubernetes.io/auth-idp-oidc: '{"issuer":"https://portefaix.eu.auth0.com","authorizationEndpoint":"https://portefaix.eu.auth0.com/authorize","tokenEndpoint":"https://portefaix.eu.auth0.com/oauth/token","userInfoEndpoint":"https://portefaix.eu.auth0.com/userinfo","secretName":"portefaix-aws-auth0"}'
            alb.ingress.kubernetes.io/auth-scope: 'email openid'
            alb.ingress.kubernetes.io/auth-on-unauthenticated-request: authenticate
            alb.ingress.kubernetes.io/tags: Project=Portefaix,Service=Thanos,Env=Staging,Made-By=FluxCD
            alb.ingress.kubernetes.io/healthcheck-interval-seconds: "5"
            alb.ingress.kubernetes.io/healthcheck-path: /
            alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
            alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "4"
            alb.ingress.kubernetes.io/healthy-threshold-count: "2"
            alb.ingress.kubernetes.io/unhealthy-threshold-count: "2"
            cert-manager.io/cluster-issuer: letsencrypt-prod
            external-dns.alpha.kubernetes.io/hostname: thanos-bucket.aws.portefaix.xyz
            # nginx.ingress.kubernetes.io/auth-url: https://forwardauth.aws.portefaix.xyz/verify?uri=$scheme://$host$request_uri
            # nginx.ingress.kubernetes.io/auth-signin: "https://forwardauth.aws.portefaix.xyz/?uri=$scheme://$host$request_uri"
          hosts:
          - thanos-bucket.aws.portefaix.xyz
          # tls:
          #   - secretName: thanos-bucket.aws.portefaix.xyz-tls
          #     hosts:
          #       - thanos-bucket.aws.portefaix.xyz
      resources:
        limits:
          # cpu: 200m
          memory: 300Mi
        requests:
          cpu: 100m
          memory: 100Mi

    rule:
      enabled: false

    sidecar:
      enable: true
