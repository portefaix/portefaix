# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  # chart:
  #   spec:
  #     version: 12.0.4
  values:
    alertmanager:
      serviceAccount:
        create: true
        name: alertmanager
        annotations:
          iam.gke.io/gcp-service-account: portefaix-dev-alertmanager@portefaix-dev.iam.gserviceaccount.com
      ingress:
        enabled: true
        annotations:
          # External Load Balancer
          kubernetes.io/ingress.class: gce
          kubernetes.io/ingress.global-static-ip-name: portefaix-dev-external-lb
          # Internal Load Balancer
          # kubernetes.io/ingress.class: gce-internal
          # kubernetes.io/ingress.regional-static-ip-name: portefaix-dev-internal-lb
          # kubernetes.io/ingress.allow-http: "false"
          # ingress.kubernetes.io/force-ssl-redirect: "true"
          # Nginx
          # kubernetes.io/ingress.class: nginx
          # cert-manager.io/cluster-issuer: 'letsencrypt-dev'
          # nginx.ingress.kubernetes.io/auth-url: https://forwardauth.gcp.portefaix.xyz/verify?uri=$scheme://$host$request_uri
          # nginx.ingress.kubernetes.io/auth-signin: "https://forwardauth.gcp.portefaix.xyz/?uri=$scheme://$host$request_uri"
        hosts:
          - alertmanager.gcp.portefaix.xyz
        path: /
        pathType: ImplementationSpecific
        tls:
          - secretName: alertmanager.gcp.portefaix.xyz-tls
            hosts:
              - alertmanager.gcp.portefaix.xyz
      alertmanagerSpec:
        externalUrl: https://alertmanager.gcp.portefaix.xyz

    prometheus:
      serviceAccount:
        create: true
        name: prometheus
        annotations:
          iam.gke.io/gcp-service-account: portefaix-dev-prometheus@portefaix-dev.iam.gserviceaccount.com
      thanosIngress:
        enabled: true
        annotations:
          # External Load Balancer
          kubernetes.io/ingress.class: gce
          kubernetes.io/ingress.global-static-ip-name: portefaix-dev-external-lb
          # Internal Load Balancer
          # kubernetes.io/ingress.class: gce-internal
          # kubernetes.io/ingress.regional-static-ip-name: portefaix-dev-internal-lb
          # kubernetes.io/ingress.allow-http: "false"
          # ingress.kubernetes.io/force-ssl-redirect: "true"
          # Nginx
          # kubernetes.io/ingress.class: nginx
          # cert-manager.io/cluster-issuer: 'letsencrypt-dev'
          # nginx.ingress.kubernetes.io/auth-url: https://forwardauth.gcp.portefaix.xyz/verify?uri=$scheme://$host$request_uri
          # nginx.ingress.kubernetes.io/auth-signin: "https://forwardauth.gcp.portefaix.xyz/?uri=$scheme://$host$request_uri"
        hosts:
          - prometheus-sidecar.gcp.portefaix.xyz
        path:
          - /
        pathType: ImplementationSpecific
        tls:
          - secretName: prometheus-sidecar.gcp.portefaix.xyz-tls
            hosts:
              - prometheus-sidecar.gcp.portefaix.xyz
      ingress:
        enabled: true
        annotations:
          # External Load Balancer
          kubernetes.io/ingress.class: gce
          kubernetes.io/ingress.global-static-ip-name: portefaix-dev-external-lb
          # Internal Load Balancer
          # kubernetes.io/ingress.class: gce-internal
          # kubernetes.io/ingress.regional-static-ip-name: portefaix-dev-internal-lb
          # kubernetes.io/ingress.allow-http: "false"
          # ingress.kubernetes.io/force-ssl-redirect: "true"
          # Nginx
          # kubernetes.io/ingress.class: nginx
          # cert-manager.io/cluster-issuer: 'letsencrypt-dev'
          # nginx.ingress.kubernetes.io/auth-url: https://forwardauth.gcp.portefaix.xyz/verify?uri=$scheme://$host$request_uri
          # nginx.ingress.kubernetes.io/auth-signin: "https://forwardauth.gcp.portefaix.xyz/?uri=$scheme://$host$request_uri"
        hosts:
          - prometheus.gcp.portefaix.xyz
        path:
        - /
        pathType: ImplementationSpecific
        tls:
          - secretName: prometheus.gcp.portefaix.xyz-tls
            hosts:
              - prometheus.gcp.portefaix.xyz
      prometheusSpec:
        externalUrl: https://prometheus.gcp.portefaix.xyz
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: "standard"
              resources:
                requests:
                  storage: 10Gi
        thanosIngress:
          enabled: true

        # TODO: kube-prometheus-stack: Support for secrets store CSI driver
        # labels: kind/feature, priority/medium, lifecycle/frozen, area/kubernetes, cloud/gcp
        # https://github.com/prometheus-community/helm-charts/pull/1158

        # thanos:
        #   secretProviderClass:
        #     secretProviderClass:
        #       provider: gcp
        #       parameters:
        #         secrets: |
        #           - resourceName: "projects/portefaix-dev/secrets/thanos_config/versions/latest"
        #             fileName: "object-store.yaml"
        #     objectStorageConfigFile: /var/secrets/object-store.yaml
        #   # TODO: kube-prometheus-stack: Extra Volumes on thanos-sidecar container
        #   # labels: kind/feature, priority/medium, lifecycle/frozen, area/kubernetes, cloud/gcp
        #   # https://github.com/prometheus-operator/prometheus-operator/pull/3966
        #   volumes:
        #   volumesMounts:
        #     - mountPath: "/var/secrets"
        #       name: mysecret
