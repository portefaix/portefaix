# Copyright (C) 2021 Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Azure / Terraform Cloud undeploy

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment'
        required: true
        default: 'dev'
      tf_version:
        description: "Terraform version"
        required: true
        default: '1.0.10'
  schedule:
    - cron: "0 23 * * *"

# env:
#   ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID_DEV }}
#   ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET_DEV }}
#   ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID_DEV }}
#   ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID_DEV }}

jobs:

  observability:
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Delete Observability / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/azure/observability/${{ github.event.inputs.env }}

    - name: Terraform Destroy
      run: terraform destroy -auto-approve
      working-directory: terraform/azure/observability/${{ github.event.inputs.env }}

  velero:
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Delete Velero / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/azure/velero/${{ github.event.inputs.env }}

    - name: Terraform Destroy
      run: terraform destroy -auto-approve
      working-directory: terraform/azure/velero/${{ github.event.inputs.env }}

  azure_aks:
    needs:
      - observability
      - velero
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Delete AKS / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/azure/aks/${{ github.event.inputs.env }}

    - name: Terraform Destroy
      run: terraform destroy -auto-approve
      working-directory: terraform/azure/aks/${{ github.event.inputs.env }}
      env:
        TF_VAR_authorized_ip_ranges: "[\"${{ secrets.HOME_IP_ADDRESS }}\"]"

  azure_nat_gateway:
    # needs: azure_aks
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Delete NAT Gateway / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/azure/nat-gateway/${{ github.event.inputs.env }}

    - name: Terraform Destroy
      run: terraform destroy -auto-approve
      working-directory: terraform/azure/nat-gateway/${{ github.event.inputs.env }}

  azure_public_ip_nat_gateway:
    needs: azure_nat_gateway
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Delete NAT Gateway IP address / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/azure/public-ips/nat-gateway/${{ github.event.inputs.env }}

    - name: Terraform Destroy
      run: terraform destroy -auto-approve
      working-directory: terraform/azure/public-ips/nat-gateway/${{ github.event.inputs.env }}

  azure_vnet:
    needs:
      - azure_aks
      - azure_public_ip_nat_gateway
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Delete VNet / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/azure/vnet/${{ github.event.inputs.env }}

    - name: Terraform Destroy
      run: terraform destroy -auto-approve
      working-directory: terraform/azure/vnet/${{ github.event.inputs.env }}
