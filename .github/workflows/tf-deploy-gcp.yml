# Copyright (C) 2021 Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: GCP / Terraform Cloud deploy

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment'
        required: true
        default: 'prod'
      tf_version:
        description: "Terraform version"
        required: true
        default: '1.0.10'

jobs:
  gcp_vpc:
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Deploy VPC / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/vpc/${{ github.event.inputs.env }}

    - name: Terraform Plan
      run: terraform plan
      working-directory: terraform/gcp/vpc/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/vpc/${{ github.event.inputs.env }}

  gcp_cloud_dns:
    needs: gcp_vpc
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Cloud DNS on GCP / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/dns/${{ github.event.inputs.env }}

    - name: Terraform Plan
      run: terraform plan
      working-directory: terraform/gcp/dns/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/dns/${{ github.event.inputs.env }}

  gcp_external_ip_cloud_nat:
    needs: gcp_vpc
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "External IP for Cloud NAT on GCP / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/external-ips/cloud-nat/${{ github.event.inputs.env }}

    - name: Terraform Plan
      run: terraform plan
      working-directory: terraform/gcp/external-ips/cloud-nat/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/external-ips/cloud-nat/${{ github.event.inputs.env }}

  gcp_cloud_nat:
    needs: gcp_external_ip_cloud_nat
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Cloud NAT on GCP / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/cloud-nat/${{ github.event.inputs.env }}

    - name: Terraform Plan
      run: terraform plan
      working-directory: terraform/gcp/cloud-nat/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/cloud-nat/${{ github.event.inputs.env }}

  gcp_gke:
    needs: gcp_cloud_nat
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "GKE on GCP / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/gke/${{ github.event.inputs.env }}

    - name: Terraform Plan
      run: terraform plan
      working-directory: terraform/gcp/gke/${{ github.event.inputs.env }}
      env:
        TF_VAR_master_authorized_networks: "[{\"cidr_block\": \"${{ secrets.HOME_IP_ADDRESS }}\", \"display_name\": \"Home\"}]"

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/gke/${{ github.event.inputs.env }}
      env:
        TF_VAR_master_authorized_networks: "[{\"cidr_block\": \"${{ secrets.HOME_IP_ADDRESS }}\", \"display_name\": \"Home\"}]"

  # gcp_sops:
  #   needs: gcp_gke
  #   runs-on: ubuntu-latest
  #   steps:
  #   - run: |
  #       echo "Deploy Sops on GCP / ${{ github.event.inputs.env }}"

  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Setup Terraform
  #     uses: hashicorp/setup-terraform@v1
  #     with:
  #       terraform_version: ${{ github.event.inputs.tf_version }}
  #       cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

  #   # - name: Configure GCP credentials
  #   #   uses: google-github-actions/setup-gcloud@v0.2.1
  #   #   with:
  #   #     version: 324.0.0
  #   #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
  #   #     export_default_credentials: true

  #   # - name: Use gcloud CLI
  #   #   run: gcloud info

  #   - name: Terraform Init
  #     run: terraform init -upgrade
  #     working-directory: terraform/gcp/sops/${{ github.event.inputs.env }}

  #   - name: Terraform Plan
  #     run: terraform plan
  #     working-directory: terraform/gcp/sops/${{ github.event.inputs.env }}

  #   - name: Terraform Apply
  #     run: terraform apply -auto-approve
  #     working-directory: terraform/gcp/sops/${{ github.event.inputs.env }}

  gcp_observability:
    needs: gcp_gke
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Deploy Observability on GCP / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/observability/${{ github.event.inputs.env }}

    - name: Terraform Plan
      run: terraform plan
      working-directory: terraform/gcp/observability/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/observability/${{ github.event.inputs.env }}

  gcp_cert_manager:
    needs: gcp_gke
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Deploy CertManager on GCP / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/cert-manager/${{ github.event.inputs.env }}

    - name: Terraform Plan
      run: terraform plan
      working-directory: terraform/gcp/cert-manager/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/cert-manager/${{ github.event.inputs.env }}

  gcp_external_dns:
    needs: gcp_gke
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Deploy External DNS on GCP / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/external-dns/${{ github.event.inputs.env }}

    - name: Terraform Plan
      run: terraform plan
      working-directory: terraform/gcp/external-dns/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/external-dns/${{ github.event.inputs.env }}

  gcp_velero:
    needs: gcp_gke
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Deploy Velero on GCP / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/velero/${{ github.event.inputs.env }}

    - name: Terraform Plan
      run: terraform plan
      working-directory: terraform/gcp/velero/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/velero/${{ github.event.inputs.env }}

  gcp_vector:
    needs: gcp_gke
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Deploy Vector on GCP / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/vector/${{ github.event.inputs.env }}

    - name: Terraform Plan
      run: terraform plan
      working-directory: terraform/gcp/vector/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/vector/${{ github.event.inputs.env }}

  gke:
    needs:
      - gcp_observability
      - gcp_cert_manager
      - gcp_external_dns
      - gcp_vector
      - gcp_velero
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - id: auth
      name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v0.4.1'
      with:
        token_format: 'access_token'
        workload_identity_provider: 'projects/portefaix-${{ github.event.inputs.env }}/locations/global/workloadIdentityPools/portefaix-${{ github.event.inputs.env }}/providers/portefaix-${{ github.event.inputs.env }}-github'
        service_account: 'terraform@portefaix-${{ github.event.inputs.env }}.iam.gserviceaccount.com'

    - id: get-gke-credentials
      name: Retrieve GKE credentials
      uses: google-github-actions/get-gke-credentials@v0.4.0
      with:
        cluster_name: portefaix-${{ github.event.inputs.env }}-cluster-gke
        location: europe-west1-c

    - id: get-pods
      name: List pods
      run: kubectl get pods -A
