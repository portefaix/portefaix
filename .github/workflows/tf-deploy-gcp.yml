# Copyright (C) 2021 Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: GCP / Create

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment'
        required: true
        default: 'dev'
      tf_version:
        description: "Terraform version"
        required: true
        default: '1.0.10'

jobs:
  gcp_vpc:
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Deploy VPC / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/vpc/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/vpc/${{ github.event.inputs.env }}

  gcp_cloud_dns:
    needs: gcp_vpc
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Cloud DNS / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/cloud-dns/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/cloud-dns/${{ github.event.inputs.env }}

  gcp_external_ip_cloud_nat:
    needs: gcp_vpc
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "External IP for Cloud NAT / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/external-ips/cloud-nat/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/external-ips/cloud-nat/${{ github.event.inputs.env }}

  gcp_cloud_nat:
    needs: gcp_external_ip_cloud_nat
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Cloud NAT / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/cloud-nat/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/cloud-nat/${{ github.event.inputs.env }}

  gcp_artifact_registry:
    needs: gcp_vpc
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Artifact Registry / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/artifact-registry/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/artifact-registry/${{ github.event.inputs.env }}

  gcp_pubsub:
    needs: gcp_vpc
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "PubSub / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/pubsub/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/pubsub/${{ github.event.inputs.env }}

  gcp_cloud_armor:
    needs: gcp_vpc
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Cloud Armor / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/cloud-armor/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/cloud-armor/${{ github.event.inputs.env }}

  gcp_gke:
    needs:
      - gcp_cloud_nat
      - gcp_artifact_registry
      - gcp_pubsub
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "GKE / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/gke/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/gke/${{ github.event.inputs.env }}
      env:
        TF_VAR_master_authorized_networks: "[{\"cidr_block\": \"${{ secrets.HOME_IP_ADDRESS }}\", \"display_name\": \"Home\"}]"

  # gcp_sops:
  #   needs: gcp_gke
  #   runs-on: ubuntu-latest
  #   steps:
  #   - run: |
  #       echo "Deploy Sops / ${{ github.event.inputs.env }}"

  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Setup Terraform
  #     uses: hashicorp/setup-terraform@v1
  #     with:
  #       terraform_version: ${{ github.event.inputs.tf_version }}
  #       cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

  #   # - name: Configure GCP credentials
  #   #   uses: google-github-actions/setup-gcloud@v0.2.1
  #   #   with:
  #   #     version: 324.0.0
  #   #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
  #   #     export_default_credentials: true

  #   # - name: Use gcloud CLI
  #   #   run: gcloud info

  #   - name: Terraform Init
  #     run: terraform init -upgrade
  #     working-directory: terraform/gcp/sops/${{ github.event.inputs.env }}

  #   - name: Terraform Plan
  #     run: terraform plan
  #     working-directory: terraform/gcp/sops/${{ github.event.inputs.env }}

  #   - name: Terraform Apply
  #     run: terraform apply -auto-approve
  #     working-directory: terraform/gcp/sops/${{ github.event.inputs.env }}

  gcp_observability:
    needs: gcp_gke
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Deploy Observability / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/observability/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/observability/${{ github.event.inputs.env }}

  gcp_cert_manager:
    needs: gcp_gke
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Deploy CertManager / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/cert-manager/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/cert-manager/${{ github.event.inputs.env }}

  gcp_external_dns:
    needs: gcp_gke
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Deploy External DNS / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/external-dns/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/external-dns/${{ github.event.inputs.env }}

  gcp_velero:
    needs: gcp_gke
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Deploy Velero / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/velero/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/velero/${{ github.event.inputs.env }}

  gcp_vector:
    needs: gcp_gke
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Deploy Vector / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/vector/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/vector/${{ github.event.inputs.env }}

  # gcp_k8s:
  #   needs:
  #     - gcp_sops
  #     - gcp_observability
  #     - gcp_cert_manager
  #     - gcp_external_dns
  #     - gcp_velero
  #     - gcp_vector

  #   runs-on: ubuntu-latest
  #   steps:
  #   - run: |
  #       echo "Deploy Kubernetes applications on GKE / ${{ github.event.inputs.env }}"

  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Setup Terraform
  #     uses: hashicorp/setup-terraform@v1
  #     with:
  #       terraform_version: ${{ github.event.inputs.tf_version }}
  #       cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

  #   # - name: Configure GCP credentials
  #   #   uses: google-github-actions/setup-gcloud@v0.2.1
  #   #   with:
  #   #     version: 324.0.0
  #   #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
  #   #     export_default_credentials: true

  #   - name: Public IP
  #     id: ip
  #     uses: haythem/public-ip@v1.2

  #   - name: Print Public IP
  #     run: |
  #       echo ${{ steps.ip.outputs.ipv4 }}
  #       echo ${{ steps.ip.outputs.ipv6 }}

  #   - name: Terraform Init
  #     run: terraform init -upgrade
  #     working-directory: terraform/gcp/gke/${{ github.event.inputs.env }}

  #   - name: Terraform Plan
  #     run: terraform plan
  #     working-directory: terraform/gcp/gke/${{ github.event.inputs.env }}
  #     env:
  #       TF_VAR_master_authorized_networks: "[{\"cidr_block\": \"${{ secrets.HOME_IP_ADDRESS }}\", \"display_name\": \"Home\"}, {\"cidr_block\": \"${{ steps.ip.outputs.ipv4 }}/32\", \"display_name\": \"Github Action runner\"}]"

  #   - name: Terraform Apply
  #     run: terraform apply -auto-approve
  #     working-directory: terraform/gcp/gke/${{ github.event.inputs.env }}
  #     env:
  #       TF_VAR_master_authorized_networks: "[{\"cidr_block\": \"${{ secrets.HOME_IP_ADDRESS }}\", \"display_name\": \"Home\"}, {\"cidr_block\": \"${{ steps.ip.outputs.ipv4 }}/32\", \"display_name\": \"Github Action runner\"}]"

  #   - name: Deploy Kubernetes applications
  #     run: |
  #       ./hack/scripts/terraform-helm.sh gcp prod apply
