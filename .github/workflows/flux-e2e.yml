# Copyright (C) 2021 Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Flux / E2E

on:
  pull_request:
    branches:
      - master
    paths:
      - 'clusters/**'
      - 'kubernetes/**'
  push:
    branches:
      - master
    paths:
      - 'clusters/**'
      - 'kubernetes/**'

############################################################################
# K3S

jobs:
  k3s:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # https://github.com/k3s-io/k3s/releases
        k8s_version:
          - v1.18.20+k3s1
          - v1.19.13+k3s1
          - v1.20.9+k3s1
          - v1.21.3+k3s1

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Step that prints name of pull request's base branch
      run: |
        echo "Pull request's base branch is: ${CURRENT_BRANCH}"
      env:
        CURRENT_BRANCH: ${{ github.head_ref }}
      if: github.event_name == 'pull_request'

    # - name: Setup k3s
    #   uses: debianmaster/actions-k3s@v1.0.3
    #   id: k3s
    #   with:
    #     version: ${{ matrix.k8s_version }}

    # - name: Check nodes on k3s
    #   run: |
    #     # To generate kubeconfigs for specific service accounts, current user must have read rights to the cluster-admin kubeconfig folder
    #     sudo chown $(id -u):$(id -g) /tmp/output/
    #     # export CLUSTER_ADMIN_KUBECONFIG=$KUBECONFIG

    #     kubectl get nodes
    #     kubectl get pods -A
    #     sleep 20

    - name: Start k8s locally
      uses: jupyterhub/action-k3s-helm@v1
      with:
        k3s-version: ${{ matrix.k8s_version }}
        helm-version: v3.4.2 # releases:  https://github.com/helm/helm/tags

    - name: Verify function of k8s, kubectl, and helm
      run: |
        echo "kubeconfig: $KUBECONFIG"
        kubectl version
        kubectl get pods --all-namespaces

        helm version
        helm list

    - name: Setup Flux CLI
      uses: fluxcd/flux2/action@main

    - name: Install Flux in Kubernetes
      run: flux install

    - name: Create Kubernetes secret for Sops
      run: |
        echo ${SOPS_GPG_KEY} | base64 -d
        echo ${SOPS_GPG_KEY} | base64 -d | kubectl create secret generic sops-gpg --namespace=flux-system --from-file=sops.asc=/dev/stdin
      env:
        SOPS_GPG_KEY: ${{ secrets.SOPS_GPG_KEY }}

    - name: Flux
      run: |
        flux create source git flux-system \
          --url=${{ github.event.repository.html_url }} \
          --branch=${CURRENT_BRANCH}
        flux create kustomization flux-system \
          --source=flux-system \
          --path=./clusters/k3s/cicd/
        sleep 60
        echo "### Flux ###"
        flux check
        sleep 10
        echo "### Kustomizations ###"
        flux get kustomizations
        sleep 10
        echo "### Helm Releases ###"
        flux get helmreleases -A
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CURRENT_BRANCH: ${{ github.head_ref }}

    - name: Verify reconciliation
      run: |
        echo "Flux System"
        kubectl -n flux-system wait kustomization/flux-system-charts --for=condition=ready --timeout=5m
        echo "Monitoring"
        kubectl -n flux-system wait kustomization/kube-prometheus-stack --for=condition=ready --timeout=5m
        kubectl -n flux-system wait kustomization/thanos --for=condition=ready --timeout=5m

    - name: Debug failure
      if: failure()
      run: |
        kubectl -n flux-system get all
        kubectl -n flux-system logs deploy/source-controller
        kubectl -n flux-system logs deploy/kustomize-controller
        kubectl -n flux-system logs deploy/helm-controller
        kubectl get pods -A
        kubectl get secret sops-gpg --namespace=flux-system -o yaml
