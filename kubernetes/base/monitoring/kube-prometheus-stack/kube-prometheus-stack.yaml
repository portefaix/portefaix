# Copyright (C) 2021 Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 18.0.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
  releaseName: kube-prometheus-stack
  targetNamespace: monitoring
  test:
    enable: false # Enable helm test
  install:
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  rollback:
    timeout: 1m
    cleanupOnFail: true
  # Depends on having the sealed secret to un-encrypted required secrets.
  # dependsOn:
  #   - name: sealed-secrets
  #     namespace: flux-system
  timeout: 20m
  values:
    commonLabels:
      portefaix.xyz/version: v0.17.0
      monitoring: portefaix
    defaultRules:
      create: false
      # runbookUrl: "https://github.com/portefaix/portefaix/tree/master/runbook.md#"
      labels:
        portefaix.xyz/version: v0.17.0
      annotations:
        a8r.io/description: Default Prometheus rules
        a8r.io/owner: prometheus-community
        a8r.io/bugs: https://github.com/prometheus-community/helm-charts/issues
        a8r.io/documentation: https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack
        a8r.io/repository: https://github.com/prometheus-community/helm-charts
        a8r.io/support: https://github.com/prometheus-community/helm-charts/issues

      additionalRuleLabels:
        portefaix.xyz/version: v0.17.0

    alertmanager:
      enabled: true
      annotations:
        a8r.io/description: Default Prometheus rules
        a8r.io/owner: prometheus-community
        a8r.io/bugs: https://github.com/prometheus-community/helm-charts/issues
        a8r.io/documentation: https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack
        a8r.io/repository: https://github.com/prometheus-community/helm-charts
        a8r.io/support: https://github.com/prometheus-community/helm-charts/issues
      serviceAccount:
        create: true
        name: alertmanager
      config:
        global:
          resolve_timeout: 5m
        route:
          group_by: ['job']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
          receiver: blackhole

          routes:
          - match:
              alertname: Watchdog
            receiver: blackhole
          - match_re:
              severity: info|warning|critical
            receiver: slack-monitoring
            continue: true

        receivers:
        - name: blackhole
        - name: slack
          slack_configs:
            - channel: '#alerts-<env>'
              color: '{{ template "slack.color" . }}'
              title: '{{ template "slack.title" . }}'
              text: '{{ template "slack.text" . }}'
              send_resolved: true
              actions:
                - type: button
                  text: 'Runbook :green_book:'
                  url: '{{ (index .Alerts 0).Annotations.runbook_url }}'
                - type: button
                  text: 'Query :mag:'
                  url: '{{ (index .Alerts 0).GeneratorURL }}'
                - type: button
                  text: 'Dashboard :chart_with_upwards_trend:'
                  url: '{{ (index .Alerts 0).Annotations.dashboard_url }}'
                - type: button
                  text: 'Silence :no_bell:'
                  url: '{{ template "__alert_silence_link" . }}'

        templates:
        - '/etc/alertmanager/config/*.tmpl'

      tplConfig: false
      templateFiles:
        template_1.tmpl: |-
          {{ define "__alert_silence_link" -}}
              {{ .ExternalURL }}/#/silences/new?filter=%7B
              {{- range .CommonLabels.SortedPairs -}}
                  {{- if ne .Name "alertname" -}}
                      {{- .Name }}%3D"{{- .Value -}}"%2C%20
                  {{- end -}}
              {{- end -}}
              alertname%3D"{{- .CommonLabels.alertname -}}"%7D
          {{- end }}

          {{ define "__alert_severity" -}}
              {{- if eq .CommonLabels.severity "critical" -}}
              *Severity:* `Critical`
              {{- else if eq .CommonLabels.severity "warning" -}}
              *Severity:* `Warning`
              {{- else if eq .CommonLabels.severity "info" -}}
              *Severity:* `Info`
              {{- else -}}
              *Severity:* :question: {{ .CommonLabels.severity }}
              {{- end }}
          {{- end }}

          {{ define "slack.title" -}}
            [{{ .Status | toUpper -}}
            {{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{- end -}}
            ] {{ .CommonLabels.alertname }}
          {{- end }}

          {{ define "slack.text" -}}

              {{ template "__alert_severity" . }}
              {{- if (index .Alerts 0).Annotations.summary }}
              {{- "\n" -}}
              *Summary:* {{ (index .Alerts 0).Annotations.summary }}
              {{- end }}

              {{ range .Alerts }}

                  {{- if .Annotations.description }}
                  {{- "\n" -}}
                  {{ .Annotations.description }}
                  {{- "\n" -}}
                  {{- end }}
                  {{- if .Annotations.message }}
                  {{- "\n" -}}
                  {{ .Annotations.message }}
                  {{- "\n" -}}
                  {{- end }}

              {{- end }}

          {{- end }}

          {{ define "slack.color" -}}
              {{ if eq .Status "firing" -}}
                  {{ if eq .CommonLabels.severity "warning" -}}
                      warning
                  {{- else if eq .CommonLabels.severity "critical" -}}
                      danger
                  {{- else -}}
                      #439FE0
                  {{- end -}}
              {{ else -}}
              good
              {{- end }}
          {{- end }}

      ingress:
        enabled: false
      serviceMonitor:
        selfMonitor: true
      alertmanagerSpec:
        logFormat: json
        logLevel: info

    grafana:
      enabled: false

    kubeApiServer:
      enabled: true

    kubelet:
      enabled: true

    kubeControllerManager:
      enabled: true

    coreDns:
      enabled: true

    kubeDns:
      enabled: false

    kubeEtcd:
      enabled: true

    kubeProxy:
      enabled: true

    kubeScheduler:
      enabled: true

    kubeStateMetrics:
      enabled: true

    nodeExporter:
      enabled: true
      podLabels:
        portefaix.xyz/version: v0.17.0

    ## Configuration for prometheus-node-exporter subchart
    # prometheus-node-exporter:

    prometheusOperator:
      enabled: true
      serviceAccount:
        create: true
        name: prometheus-operator
      serviceMonitor:
        selfMonitor: true
      # image:
      #   repository: quay.io/prometheus-operator/prometheus-operator
      #   tag: v0.43.1
      tls:
        enabled: false
      ## Admission webhook support for PrometheusRules resources added in Prometheus Operator 0.30 can be enabled to prevent incorrectly formatted
      ## rules from making their way into prometheus and potentially preventing the container from starting
      admissionWebhooks:
        enabled: false

    prometheus:
      enabled: true
      annotations:
        a8r.io/description: Default Prometheus rules
        a8r.io/owner: prometheus-community
        a8r.io/bugs: https://github.com/prometheus-community/helm-charts/issues
        a8r.io/documentation: https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack
        a8r.io/repository: https://github.com/prometheus-community/helm-charts
        a8r.io/support: https://github.com/prometheus-community/helm-charts/issues
      serviceAccount:
        create: true
        name: prometheus
      thanosService:
        enabled: true
      thanosIngress:
        enabled: false
      ingress:
        enabled: false
      serviceMonitor:
        selfMonitor: true
      prometheusSpec:
        enableAdminAPI: true
        serviceMonitorSelector:
          matchLabels:
            monitoring: portefaix
        serviceMonitorNamespaceSelector: {}
        podMonitorSelector:
          matchLabels:
            monitoring: portefaix
        podMonitorNamespaceSelector: {}
        probeSelector:
           matchLabels:
            monitoring: portefaix
        probeNamespaceSelector: {}
        ruleNamespaceSelector: {}
        ruleSelector:
           matchLabels:
            monitoring: portefaix
        # image:
        #   repository: quay.io/prometheus/prometheus
        #   tag: v2.22.1
        retention: 7d
        logLevel: info
        logFormat: json
        # storageSpec:
        #   volumeClaimTemplate:
        #     spec:
        #       storageClassName: ""
        #       resources:
        #         requests:
        #           storage: 10Gi
        additionalScrapeConfigs: []
        thanos:
          objectStorageConfig:
            name: thanos-objstore-config
            key: object-store.yaml
